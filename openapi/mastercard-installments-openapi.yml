openapi: 3.0.3
info:
  title: Mastercard Installments API
  description: >-
    The Mastercard Installments program enables financial institutions, licensed
    lenders, Fintechs, and BNPL players to offer installment plans before,
    during, post purchase. This can be done by utilizing either existing or new
    lines of consumer credit. This API consists of several endpoints which
    enable customers to implement use cases supported by Mastercard Installments
    Program with Merchant Participation  and Mastercard Installments Payment
    Services.
  contact:
    name: API Support
    email: apisupport@mastercard.com
    url: https://developer.mastercard.com/support
  version: 2.0.0
externalDocs:
  description: ISO 3166 COUNTRY CODES
  url: https://www.iso.org/iso-3166-country-codes.html
servers:
  - url: https://sandbox.api.mastercard.com/installments
    description: Sandbox
  - url: https://api.mastercard.com/installments
    description: Production
tags:
  - name: Merchant Participation
    description: The API provides information on partner merchants of Buy Now Pay Later.
  - name: Approvals
    description: >-
      The API provides ability for the lender to approve a BNPL loan during
      purchase.
  - name: PAN List
    description: >-
      The API provides capability to create and manage a list of PANs associated
      to an Installment Offer.
  - name: Installments Offers
    description: >-
      The API provides capability to perform installments eligibility and
      retrieve detailed information for each eligible offer.
  - name: Installments Plan
    description: >-
      The API Provides management of Installment Plan after an offer is availed
      by a consumer.
  - name: Installments Notification
    description: Installments Plan Notification API.
paths:
  /consumers/pans/registrations:
    post:
      tags:
        - PAN List
      summary: >-
        Create a list of Primary Account Numbers(PAN's) or add Primary Account
        Numbers to an existing list.
      description: >-
        This endpoint allows Issuers to create a new PAN List by providing the
        name of the PAN List, Account Range details, and a set of PANs. The same
        endpoint can also be used to add more PANs to a previously created list.
        Refer to request examples to understand different scenarios.

        - This endpoint requires partial request and response payload encryption
        to encrypt the 'sensitiveData' as part of encryptedValue field. Please
        refer to request and response specification for more details. The
        encryption needs to be performed using  [JWE payload
        encryption](https://developer.mastercard.com/platform/documentation/security-and-authentication/securing-sensitive-data-using-payload-encryption/#jwe-encryption).
        Please refer to the [Securing Sensitive Data Using Payload
        Encryption](https://developer.mastercard.com/platform/documentation/security-and-authentication/securing-sensitive-data-using-payload-encryption/)
        sections for implementation details.
      x-mastercard-api-encrypted: true
      operationId: registerPans
      requestBody:
        $ref: '#/components/requestBodies/PanRegistrationBody'
      responses:
        '200':
          $ref: '#/components/responses/Registration'
        '400':
          $ref: '#/components/responses/BadRequestPanRegistrationError'
        '401':
          $ref: '#/components/responses/ConsumerUnauthorized'
        '403':
          $ref: '#/components/responses/ConsumerForbiddenError'
  /consumers/pans/deregistrations:
    post:
      tags:
        - PAN List
      summary: Removes one or more PANs from an existing PAN List.
      description: >-
        This endpoint allows customers to remove one or more PANs from an
        existing PAN List.

        - This endpoint requires partial request and response payload encryption
        to encrypt the array of PANs (pans object) as part of sensitiveData
        field. Please refer to request and response specification for more
        details. The encryption needs to be performed using JWE payload
        encryption. Please refer to the [Securing Sensitive Data Using Payload
        Encryption](https://developer.mastercard.com/platform/documentation/security-and-authentication/securing-sensitive-data-using-payload-encryption/)
        sections for implementation details.
      operationId: deregisterPans
      x-mastercard-api-encrypted: true
      requestBody:
        $ref: '#/components/requestBodies/PanDeregistrationBody'
      responses:
        '200':
          $ref: '#/components/responses/Deregistration'
        '400':
          $ref: '#/components/responses/BadRequestPanDeregistrationError'
        '401':
          $ref: '#/components/responses/ConsumerUnauthorized'
        '403':
          $ref: '#/components/responses/ConsumerForbiddenError'
  /merchants/participations:
    post:
      tags:
        - Merchant Participation
      summary: >-
        Allows a registered partner to create or update merchant participation
        details
      description: >
        This endpoint enables registered partners to manage merchant
        participation details, indicating whether a merchant has opted into or
        out of Buy Now Pay Later. A unique MAID-based merchant is identified by
        a combination of acquirerICA, merchantLegalName, and countryCode.
        <br><br> It facilitates the creation of a merchant with participation
        and allows updates to existing participation information, such as adding
        more MIDs, toggling opt-in flags, modifying address fields, and updating
        wallet information. <br><br> Additionally, this API supports the
        submission of MAID-based merchant participation,Identification of
        existing MID based merchants relies on acquirerICA, merchantLegalName,
        and countryCode and MAID based merchants relies merchantLegalName, and
        countryCode <br><br> If a merchant already exists, the provided MIDs
        will be appended to the current set.Once a MAID is entered into the
        system, it becomes immutable. Certain fields, namely duns cannot be
        modified; they must either be null, empty, or match existing values, or
        a 400 bad request error will be thrown. This API also allows for
        updating MAID base participation submitted by other acquirers. <br><br>
        Various markets can utilize this API to submit MAID or MID
        participation. For further information, please contact the Product team.
        <br><br> Upon successful validation and acceptance of a request, the API
        returns the request ID in the 'request_id' response header, and
        processing occurs asynchronously. Use the GET /merchants/participation
        endpoint to monitor request status via the request ID. When initiating
        participation requests, ensure that the total payload size remains under
        700 KB to avoid errors. <br><br> The field
        `nonMerchantNegotiatedParticipation` will be deprecated. It is
        recommended to utilize the `optIn` flag instead. In cases where both
        fields are provided, the `optIn` field will take precedence over
        `nonMerchantNegotiatedParticipation`. <br><br> We have introduced a new
        field called `merchantGroup` which is optional for other market but
        mandatory for markets like Australia. <br><br> Please see the table
        below for market/operation wise field validation: <table> <tr>
        <td>Market</td> <td>Mandatory In Add Operation</td> <td>Mandatory In
        Update Operation</td> </tr> <tr> <td>MID Market</td>
        <td><b>merchantLegalName</b>, <b>countryCode</b>, <b>acquirerICA</b>,
        <b>dbaNames</b>, <b>mids</b>, <b>optIn(or
        nonMerchantNegotiatedParticipation for previously onboarded customers to
        API)</b>  </td> <td><b>merchantLegalName</b>, <b>countryCode</b>,
        <b>acquirerICA</b>, <b>optIn(or nonMerchantNegotiatedParticipation for
        previously onboarded customers to API)</b></td> </tr> <tr> <td>Australia
        MID Market</td> <td><b>merchantLegalName</b>, <b>merchantGroup</b>,
        <b>countryCode</b>, <b>acquirerICA</b>, <b>dbaNames</b>, <b>mids</b>,
        <b>optIn</b>  </td> <td><b>merchantLegalName</b>, <b>countryCode</b>,
        <b>acquirerICA</b>, <b>optIn</b></td> </tr> <tr> <td>MAID Market</td>
        <td><b>merchantLegalName</b>, <b>countryCode</b>, <b>acquirerICA</b>,
        <b>dbaNames</b>, <b>maid</b>, <b>maidType</b>, <b>optIn</b>  </td>
        <td><b>merchantLegalName</b>, <b>countryCode</b>, <b>acquirerICA</b>,
        <b>maid</b>, <b>maidType</b>, <b>optIn</b> </td> </tr> </table>
      operationId: postMerchantParticipations
      requestBody:
        $ref: '#/components/requestBodies/MerchantParticipations'
      responses:
        '202':
          $ref: '#/components/responses/MerchantParticipationReference'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/AccountNotRegisteredError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '406':
          $ref: '#/components/responses/NotAcceptableHeader'
    get:
      tags:
        - Merchant Participation
      summary: Provides status of merchant participation updates
      description: >
        Allows registered partners to fetch a list of merchants with
        participation details whose participation request is completed
        successfully. If query parameter 'request_id' is supplied then the
        response will be limited to only those merchant objects with any status
        (PENDING, COMPLETED) that were part of that particular request. <br><br>
        For details on mandatory fields in response, please consult the
        description section of the POST: /merchants/participations endpoint.
        <br><br> In case of request failed error response contain
        `requestEndpoint`, `requestId`, `httpErrorStatusCode`, `errors.source`,
        `errors.reasonCode`, `errors.description` and `errors.recoverable`
        mandatory fields. <br><br> For previously onboarded customers to API
        both `nonMerchantNegotiatedParticipation` and  `optIn` will be visible.
        The field `nonMerchantNegotiatedParticipation` will be deprecated.
        <br><br> For previously onboarded customers to API both `acceptorIds`
        and  `maids` will be visible. The field `acceptorIds` will be
        deprecated.
      operationId: getMerchantParticipations
      parameters:
        - $ref: '#/components/parameters/request_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/Merchants'
        '400':
          $ref: '#/components/responses/InvalidRequestIdError'
        '401':
          $ref: '#/components/responses/AccountNotRegisteredError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '406':
          $ref: '#/components/responses/NotAcceptableHeader'
  /merchants/searches:
    post:
      tags:
        - Merchant Participation
      summary: Allows registered partners to search merchant participation information.
      description: >
        Allows registered partners to search merchant objects, enabled for
        Acquirers and Installment Payment Providers (IPP). <br><br>
        Additionally, customers can search MAID merchant based on maid. <br><br>
        At least one parameter is required in the request. <br><br> For
        previously onboarded customers to API both
        `nonMerchantNegotiatedParticipation` and  `optIn` will be visible. The
        field `nonMerchantNegotiatedParticipation` will be deprecated. <br><br>
        For previously onboarded customers to API both `acceptorIds` and 
        `maids` will be visible. The field `acceptorIds` will be deprecated.
      operationId: postMerchantSearches
      parameters:
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
      requestBody:
        $ref: '#/components/requestBodies/MerchantSearchParameters'
      responses:
        '200':
          $ref: '#/components/responses/MerchantSearches'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/AccountNotRegisteredError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '406':
          $ref: '#/components/responses/NotAcceptableHeader'
  /merchants/mids/searches:
    post:
      tags:
        - Merchant Participation
      summary: >-
        Allows registered partners (Acquirers only) to search only specific
        merchant participation information.
      description: >
        Allows registered partners to search mids for a given merchant. A
        combination of `merchantLegalName`, `countryCode`, and `acquirerICA` is
        required in the request. <br><br> For previously onboarded customers to
        API both `nonMerchantNegotiatedParticipation` and  `optIn` will be
        visible. The field `nonMerchantNegotiatedParticipation` will be
        deprecated.
      operationId: postMerchantMidSearches
      parameters:
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
      requestBody:
        $ref: '#/components/requestBodies/MerchantMidSearchParameters'
      responses:
        '200':
          $ref: '#/components/responses/MidDetailsPage'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/AccountNotRegisteredError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '406':
          $ref: '#/components/responses/NotAcceptableHeader'
  /plans:
    post:
      tags:
        - Installments Plan
      description: >-
        When a cardholder chooses one of the installment offers previously shown
        through the Offer Presentment API, customers need to send the details of
        the selected offer, including the PAN, transaction information, merchant
        details, and offer specifics, without any changes. Mastercard then
        validates this data against the presented offer to ensure its integrity
        and provides a success or failure response

        If the API processing is successful, it returns an HTTP status code of
        201, a status of CREATED, and a unique Plan Identifier. In this
        scenario, customers can inform the cardholder that the installment offer
        has been processed successfully. However, if the API processing fails
        for some reason, it returns a corresponding HTTP status code and the
        customer should inform the cardholder about the failure in paying with
        installments.

        - This endpoint requires partial request payload encryption to encrypt
        sensitive data, merchant name and consumers primary account number as
        part of sensitiveData field. Please refer to request specification for
        more details. The encryption needs to be performed using [JWE payload
        encryption](https://developer.mastercard.com/platform/documentation/security-and-authentication/securing-sensitive-data-using-payload-encryption/#jwe-encryption).
        Please refer to the [Securing Sensitive Data Using Payload
        Encryption](https://developer.mastercard.com/platform/documentation/security-and-authentication/securing-sensitive-data-using-payload-encryption/)
        sections for implementation details.
      summary: >-
        Notify Mastercard when a consumer chooses a previously presented offer,
        which is henceforth called as an Installment Plan.
      x-mastercard-api-encrypted: true
      operationId: savePlan
      parameters:
        - $ref: '#/components/parameters/CorrelationIdHeaderParameter'
      requestBody:
        $ref: '#/components/requestBodies/PlanPostRequestBody'
      responses:
        '201':
          $ref: '#/components/responses/PlanCreated'
        '400':
          $ref: '#/components/responses/PlanCreateInvalidInput'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
  /plans/{plan_id}:
    get:
      tags:
        - Installments Plan
      summary: Retrieves Buy Now, Pay Later installment plan.
      description: >-
        This operation returns a BNPL installment plan based on the selected
        plan ID provided in the request. The API response contains encrypted
        values of the consumer's email and phone, and the issuer needs to
        decrypt the response using the Mastercard client encryption key.
      operationId: getPlan
      parameters:
        - $ref: '#/components/parameters/plan_id'
      responses:
        '200':
          $ref: '#/components/responses/InstallmentPlan'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
  /approvals:
    post:
      tags:
        - Approvals
      summary: Approve or decline an installment plan.
      x-mastercard-api-encrypted: true
      description: >-
        This API will be used by the provider to approve or decline a plan. This
        endpoint uses [JWE payload encryption]
        (https://developer.mastercard.com/platform/documentation/security-and-authentication/securing-sensitive-data-using-payload-encryption/#jwe-encryption).
        Please refer to the [Securing Sensitive Data Using Payload Encryption]
        (https://developer.mastercard.com/platform/documentation/security-and-authentication/securing-sensitive-data-using-payload-encryption/)
        sections for implementation details.
      operationId: planApproval
      parameters:
        - $ref: '#/components/parameters/Sync'
      requestBody:
        $ref: '#/components/requestBodies/PlanApprovalParameters'
      responses:
        '200':
          $ref: '#/components/responses/PSPData'
        '202':
          $ref: '#/components/responses/Accepted'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '406':
          $ref: '#/components/responses/NotAcceptableHeader'
  /approvals/{plan_id}:
    get:
      tags:
        - Approvals
      summary: >-
        Get the status of checkout and callback URL to PSP (Payment service
        provider).
      description: >-
        This API will be used by the provider to get the status of checkout and
        callback URL to PSP (Payment service provider). This API should be used
        within 24 hours from the time the approval was posted.
      operationId: getPlanApprovalStatus
      parameters:
        - $ref: '#/components/parameters/plan_id'
      responses:
        '200':
          $ref: '#/components/responses/CompletionPSPData'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptableHeader'
  /offers:
    post:
      tags:
        - Installments Offers
      summary: Performs installments eligibility and returns a list of eligible offers.
      x-mastercard-api-encrypted: true
      description: >-
        This endpoint allows customers to find eligible installment offers. It
        takes Primary Account Number (PAN), merchant information, and
        transaction information as input, performs installment eligibility, and
        returns a list of matching offers in response. If eligible offers are
        found, the API returns the details of each offer including tenure,
        interest rates, fees, terms and conditions, and a detailed loan
        repayment schedule etc., which can be presented to cardholders. If no
        eligible offers match the request criteria, the API response wont
        include any offers.

        - This endpoint requires partial request payload encryption to encrypt
        sensitive data 'consumers primary account number' as part of
        sensitiveData field. Please refer to request specification for more
        details. The encryption needs to be performed using [JWE payload
        encryption](https://developer.mastercard.com/platform/documentation/security-and-authentication/securing-sensitive-data-using-payload-encryption/#jwe-encryption).
        Please refer to the [Securing Sensitive Data Using Payload
        Encryption](https://developer.mastercard.com/platform/documentation/security-and-authentication/securing-sensitive-data-using-payload-encryption/)
        sections for implementation details.
      operationId: approvedOffers
      parameters:
        - $ref: '#/components/parameters/CorrelationIdParameter'
        - $ref: '#/components/parameters/AcceptLanguage'
      requestBody:
        $ref: '#/components/requestBodies/OfferParameters'
      responses:
        '200':
          $ref: '#/components/responses/OfferPresentmentsSuccess'
        '400':
          $ref: '#/components/responses/OfferPresentmentsInvalidInput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/InvalidContentType'
  /notifications:
    post:
      tags:
        - Installments Notification
      description: >-
        This is an outbound notification from Mastercard Installments to
        customers API endpoint, to notify about an installment offer availed by
        a cardholder. This is an optional notification as per Issuers
        selection, which is configured as part of customer onboarding on
        Mastercard Installment program. This endpoint requires partial request
        payload encryption to encrypt sensitive data, consumers primary account
        number as part of encryptedValues field. Please refer to request
        specification for more details. The encryption/decryption needs to be
        performed using [JWE payload
        encryption](https://developer.mastercard.com/platform/documentation/security-and-authentication/securing-sensitive-data-using-payload-encryption/#jwe-encryption).
        Please refer to the [Securing Sensitive Data Using Payload
        Encryption](https://developer.mastercard.com/platform/documentation/security-and-authentication/securing-sensitive-data-using-payload-encryption/)
        sections for implementation details.
      operationId: notifyPlan
      parameters:
        - $ref: '#/components/parameters/PlanNotifCorrelationIdHeaderParameter'
      requestBody:
        $ref: '#/components/requestBodies/PlanProcessorRequestBody'
      responses:
        '201':
          $ref: '#/components/responses/PlanNotifSuccessResponse'
        '400':
          $ref: '#/components/responses/PlanNotifBadRequestError'
        '401':
          $ref: '#/components/responses/PlanNotifUnauthorizedError'
        '403':
          $ref: '#/components/responses/PlanNotifForbiddenError'
        '404':
          $ref: '#/components/responses/PlanNotifNotFoundError'
        '429':
          $ref: '#/components/responses/PlanNotifTooManyRequestError'
      summary: >-
        Notifies Issuer or Processor about an Installment offer availed by a
        cardholder.
components:
  parameters:
    CorrelationIdHeaderParameter:
      description: >-
        Client correlation id for request tracing. Optional parameter. If not
        provided, the API will create a new one and propagate it to all
        downstream systems.
      in: header
      name: Correlation-Id
      required: false
      schema:
        type: string
        format: uuid
        example: 3d56f5a7-db48-41f0-875e-30920e8465f3
        maxLength: 36
        minLength: 36
    request_id:
      in: query
      name: request_id
      description: >-
        The request ID is obtained by calling POST /merchants/participations
        API.
      required: false
      schema:
        type: integer
        format: int64
        minimum: 0
        maximum: 9223372036854776000
      example: 7223372036854776000
    offset:
      in: query
      name: offset
      description: >-
        Determines the number of items needed in the start of the list, to
        retrieve the list starting from the offset.
      required: false
      schema:
        type: integer
        default: 0
        minimum: 0
      example: 100
    limit:
      in: query
      name: limit
      description: Controls the maximum number of items in the list.
      required: false
      schema:
        type: integer
        default: 500
        minimum: 1
        maximum: 500
      example: 100
    Sync:
      in: query
      description: >-
        Indicates whether the request is synchronous (the default value is
        false) or asynchronous.
      name: sync
      schema:
        type: boolean
      example: true
    plan_id:
      description: Unique identifier for plan
      in: path
      name: plan_id
      required: true
      schema:
        type: string
        format: uuid
      example: 3d56f5a7-db48-41f0-875e-30920e8465f3
    CorrelationIdParameter:
      in: header
      description: >-
        Client correlation id for request tracing. Optional parameter. if not
        provided, the API will create new one and propagate to all down-stream
        systems for tracing.
      name: Correlation-Id
      schema:
        type: string
        format: string
      required: false
      example: 9110be3b-d729-44e4-848c-c1844174cfbf
    AcceptLanguage:
      in: header
      description: >-
        Accept-Language header only accepts 'en' as the input language. Other
        languages are not supported at this time.
      name: Accept-Language
      schema:
        type: string
        format: string
      required: false
      example: en
    PlanNotifCorrelationIdHeaderParameter:
      description: Client correlation id for request tracing.
      in: header
      name: Correlation-Id
      required: true
      schema:
        type: string
        format: uuid
        example: 3d56f5a7-db48-41f0-875e-30920e8465f3
        maxLength: 36
        minLength: 36
  requestBodies:
    PanRegistrationBody:
      description: Request object for pans registration.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PanRegistrationBody'
          examples:
            PAN Registration with PAN and Account Range Encrypted (Only for reference):
              $ref: >-
                #/components/examples/PanRegistrationWithEncryptedValueAndAccountRangeRequest
            PAN Registration with PANs Plain:
              $ref: '#/components/examples/PanRegistrationWithEncryptedValueRequest'
            PAN Registration with Account Range Plain:
              $ref: '#/components/examples/PanRegistrationWithAccountRangeRequest'
            Update Existing PAN List Plain:
              $ref: '#/components/examples/ExistingPanListIdRegistrationRequest'
            PAN Registration with PAN and Account Range Plain:
              $ref: >-
                #/components/examples/UnencryptedPanRegistrationWithBothPanAndAccountRangeRequest
    PanDeregistrationBody:
      description: Request object for pans deregistration.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PanDeregistrationBody'
          examples:
            PAN Deregistration Encrypted (Only for reference):
              $ref: '#/components/examples/PanDeregistrationRequest'
            PAN Deregistration Request Plain:
              $ref: '#/components/examples/UnencryptedPanDeregistrationRequest'
    PlanPostRequestBody:
      content:
        application/json:
          examples:
            Carded Installment Plan Plain:
              description: >-
                Typical request for 'Mastercard Installments Payment Services
                with plain payload. Please note that the client needs to encrypt
                sensitiveData field using Mastercard provided JWE encryption
                libraries before calling the API. Refer to the example, Carded
                Installment Plan Encrypted (only for Reference), to understand
                how the resulting payload should look like after performing
                encryption
              value:
                offerTransactionId: '1763137029152964608'
                merchant:
                  name: Globex Decor
                  country: USA
                  mcc: 1711
                  merchantId: 1234856
                  url: https://www.globexdecor.com
                  acquirerId: 856478
                offerId: '24092019'
                transactionOffers:
                  - offerId: '24092019'
                  - offerId: '87654321'
                planInstallmentInformation:
                  apr: 0
                  currency: USD
                  frequency: BIWEEKLY
                  firstInstallmentAmount: 66.67
                  otherInstallmentAmount: 66.67
                  feeValue: 0
                  tenure: 6
                  totalAmount: 400
                providerId: 218b9962-1355-44e4-8a16-f911363fd849
                schedulePayments:
                  - installmentAmount: 66.67
                    dueDate: '2023-05-30'
                    installmentNumber: 1
                  - installmentAmount: 66.67
                    dueDate: '2023-06-13'
                    installmentNumber: 2
                  - installmentAmount: 66.67
                    dueDate: '2023-06-27'
                    installmentNumber: 3
                  - installmentAmount: 66.67
                    dueDate: '2023-07-11'
                    installmentNumber: 4
                  - installmentAmount: 66.67
                    dueDate: '2023-07-25'
                    installmentNumber: 5
                  - installmentAmount: 66.67
                    dueDate: '2023-08-08'
                    installmentNumber: 6
                transaction:
                  amountType: PURCHASE
                  amount: 400
                  currency: USD
                  stan: 123456
                  rrn: 123456123456
                  authorizationCode: 123456
                  localDateTime: '2023-01-01T00:00:00Z'
                  transmissionDateTime: '2023-01-01T00:00:00Z'
                  transactionLinkId: '1234567890'
                sensitiveData:
                  consumer:
                    primaryAccountNumber: 5110921032063789
            Carded Installments Plan Encrypted (only for reference):
              description: >-
                Typical Plan request for 'Mastercard Installments Payment
                Services showing indicative payload after performing JWE
                encryption on sensitiveData field.
              value:
                offerTransactionId: '1763137029152964608'
                merchant:
                  name: Globex Decor
                  country: USA
                  mcc: 1711
                  merchantId: 1234856
                  url: https://www.globexdecor.com
                  acquirerId: 856478
                offerId: '24092019'
                transactionOffers:
                  - offerId: '24092019'
                  - offerId: '87654321'
                planInstallmentInformation:
                  apr: 0
                  currency: USD
                  frequency: BIWEEKLY
                  firstInstallmentAmount: 66.67
                  otherInstallmentAmount: 66.67
                  feeValue: 0
                  tenure: 6
                  totalAmount: 400
                providerId: 218b9962-1355-44e4-8a16-f911363fd849
                schedulePayments:
                  - installmentAmount: 66.67
                    dueDate: '2023-05-30'
                    installmentNumber: 1
                  - installmentAmount: 66.67
                    dueDate: '2023-06-13'
                    installmentNumber: 2
                  - installmentAmount: 66.67
                    dueDate: '2023-06-27'
                    installmentNumber: 3
                  - installmentAmount: 66.67
                    dueDate: '2023-07-11'
                    installmentNumber: 4
                  - installmentAmount: 66.67
                    dueDate: '2023-07-25'
                    installmentNumber: 5
                  - installmentAmount: 66.67
                    dueDate: '2023-08-08'
                    installmentNumber: 6
                transaction:
                  amountType: PURCHASE
                  amount: 400
                  currency: USD
                  stan: 123456
                  rrn: 123456123456
                  authorizationCode: 123456
                  localDateTime: '2023-01-01T00:00:00Z'
                  transmissionDateTime: '2023-01-01T00:00:00Z'
                  transactionLinkId: '1234567890'
                encryptedValue: >-
                  eyJjdHkiOiI8bWEtZW5jLWtleS1hbGlhcz4iLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAtMjU2In0.SoSsDIDCNrT5aDFzZrQiLhY3dB87Kx-j0q52ShlJR62nZ3T4lKZ1RAPLkTH3QRQi017lUoVbr20c9qfHEKe4fCV6MOpdFyZM0LcYk3N6xfYBm_UL2X7bH2ihr9FYY-60UWE3A-or1W6boClZnTcwXhhJUnsgTYuf5Xr7WB32ludIS-OK3oPOU-pz_uN-OQurhj8zCMKCnQPEOis56LecRjp2-hW0LcAkN4HcMO_S_Gd34nXcCIbzGHWJFAjkIfdVTfVSEkXEq0qMID8CYMnvPA_GbiUU-fPh25cHDK8M_QGhrMZAdvA_QTDfvhq_8uVl6aJ7LhB9FI3iLyu-mqKmuw.hh8vNhwA4plS_Mk-.VHCbABQCav5DkhK5E4i37ccb.sUut6LTwK7JJ3SVMi-2Fng
          schema:
            $ref: '#/components/schemas/PlanPost'
      required: true
    PlanProcessorRequestBody:
      content:
        application/json:
          examples:
            Plan Processor Notify Request (Plain):
              description: >-
                Typical request for **Mastercard Installments Payment Services**
                indicating plain payload after decryption.
              value:
                planId: 3d56f5a7-db48-41f0-875e-30920e8465f3
                issuerCid: '242666'
                issuerIca: '19246'
                sensitiveData:
                  consumer:
                    primaryAccountNumber: 5110921032063789
                merchant:
                  name: Globex Decor
                  country: USA
                  mcc: 1711
                  acquirerId: 856478
                  merchantId: 1234856
                  url: https://www.clover.com
                offerId: '24092019'
                transactionOffers:
                  - offerId: '24092019'
                  - offerId: '87654321'
                planInstallmentInformation:
                  apr: 0.83
                  currency: USD
                  frequency: MONTHLY
                  firstInstallmentAmount: 67.66
                  otherInstallmentAmount: 66.66
                  feeValue: 1
                  tenure: 6
                  totalAmount: 400.96
                schedulePayments:
                  - installmentAmount: 67.66
                    dueDate: '2024-03-21'
                    installmentNumber: 1
                  - installmentAmount: 66.66
                    dueDate: '2024-04-21'
                    installmentNumber: 2
                  - installmentAmount: 66.66
                    dueDate: '2024-05-21'
                    installmentNumber: 3
                  - installmentAmount: 66.66
                    dueDate: '2024-06-21'
                    installmentNumber: 4
                  - installmentAmount: 66.66
                    dueDate: '2024-07-21'
                    installmentNumber: 5
                  - installmentAmount: 66.66
                    dueDate: '2024-08-21'
                    installmentNumber: 6
                transaction:
                  amountType: PURCHASE
                  amount: 200.11
                  currency: USD
                  stan: 123456
                  rrn: 123456123456
                  authorizationCode: 123456
                  localDateTime: '2024-03-11T00:00:00Z'
                  transmissionDateTime: '2024-03-11T00:00:00Z'
                  transactionLinkId: 123456adada12345
            Plan Processor Notify Request (Encrypted):
              description: >-
                Typical request for **Mastercard Installments Payment Services**
                showing how a customer would receive request from Mastercard.
                Customer need to decrypt the payload using Mastercard encrypted
                libraries to retrieve sensitive data, as shown in Plan
                Processor Notify Request (Plain) example.
              value:
                planId: 3d56f5a7-db48-41f0-875e-30920e8465f3
                issuerCid: '242666'
                issuerIca: '19246'
                merchant:
                  name: Globex Decor
                  country: USA
                  mcc: 1711
                  acquirerId: 856478
                  merchantId: 1234856
                  url: https://www.clover.com
                offerId: '24092019'
                transactionOffers:
                  - offerId: '24092019'
                  - offerId: '87654321'
                planInstallmentInformation:
                  apr: 0.83
                  currency: USD
                  frequency: MONTHLY
                  firstInstallmentAmount: 67.66
                  otherInstallmentAmount: 66.66
                  feeValue: 1
                  tenure: 6
                  totalAmount: 400.96
                schedulePayments:
                  - installmentAmount: 67.66
                    dueDate: '2024-03-21'
                    installmentNumber: 1
                  - installmentAmount: 66.66
                    dueDate: '2024-04-21'
                    installmentNumber: 2
                  - installmentAmount: 66.66
                    dueDate: '2024-05-21'
                    installmentNumber: 3
                  - installmentAmount: 66.66
                    dueDate: '2024-06-21'
                    installmentNumber: 4
                  - installmentAmount: 66.66
                    dueDate: '2024-07-21'
                    installmentNumber: 5
                  - installmentAmount: 66.66
                    dueDate: '2024-08-21'
                    installmentNumber: 6
                transaction:
                  amountType: PURCHASE
                  amount: 200.11
                  currency: USD
                  stan: 123456
                  rrn: 123456123456
                  authorizationCode: 123456
                  localDateTime: '2024-03-11T00:00:00Z'
                  transmissionDateTime: '2024-03-11T00:00:00Z'
                  transactionLinkId: 123456adada12345
                encryptedValue: >-
                  eyJjdHkiOiI8bWEtZW5jLWtleS1hbGlhcz4iLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAtMjU2In0.SoSsDIDCNrT5aDFzZrQiLhY3dB87Kx-j0q52ShlJR62nZ3T4lKZ1RAPLkTH3QRQi017lUoVbr20c9qfHEKe4fCV6MOpdFyZM0LcYk3N6xfYBm_UL2X7bH2ihr9FYY-60UWE3A-or1W6boClZnTcwXhhJUnsgTYuf5Xr7WB32ludIS-OK3oPOU-pz_uN-OQurhj8zCMKCnQPEOis56LecRjp2-hW0LcAkN4HcMO_S_Gd34nXcCIbzGHWJFAjkIfdVTfVSEkXEq0qMID8CYMnvPA_GbiUU-fPh25cHDK8M_QGhrMZAdvA_QTDfvhq_8uVl6aJ7LhB9FI3iLyu-mqKmuw.hh8vNhwA4plS_Mk-.VHCbABQCav5DkhK5E4i37ccb.sUut6LTwK7JJ3SVMi-2Fng
          schema:
            $ref: '#/components/schemas/PlanProcessorPost'
      required: true
    MerchantParticipations:
      description: >-
        The request object that contains a list of merchant participation
        reference objects.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MerchantParticipations'
          examples:
            MID Merchant Participations:
              $ref: '#/components/examples/MerchantParticipations'
            MAID Merchant Participations:
              $ref: '#/components/examples/MerchantParticipationsMAID'
            MID Merchant Participations For Australia:
              $ref: '#/components/examples/MerchantParticipationsForAustralia'
    MerchantSearchParameters:
      description: The request object that contains parameters to search merchant objects
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MerchantSearchParameters'
          examples:
            Merchant Search Parameters:
              $ref: '#/components/examples/MerchantSearchParameters'
    MerchantMidSearchParameters:
      description: >-
        The request object that contains parameters to search mids for a given
        merchant.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MerchantMidSearchParameters'
          examples:
            Merchant Mid Search Parameters:
              $ref: '#/components/examples/MerchantMidSearchParameters'
    PlanApprovalParameters:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PlanApprovalParameters'
          examples:
            Approved Consumer Selected Offer:
              $ref: '#/components/examples/ConsumerSelectedOffer'
            Approved Lender Selected Offer:
              $ref: '#/components/examples/LenderSelectedOffer'
            Declined Offer:
              $ref: '#/components/examples/Declined'
    OfferParameters:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OfferParametersEncryptedPayload'
          examples:
            Carded Installments Offers Request Plain:
              $ref: '#/components/examples/CardedInstallmentsOffersRequestPlain'
            Carded Installments Offers Request Encrypted (only for reference):
              $ref: '#/components/examples/CardedInstallmentsOffersRequestEncrypted'
  headers:
    Correlation-Id:
      description: Correlation-Id response header to trace the request.
      schema:
        type: string
      required: true
      example: 44dc28d6-cf59-11ec-9d64-0242ac120002
  responses:
    PlanNotifSuccessResponse:
      content:
        application/json:
          example: '{"status":"SUCCESS", "message":"Notification received successfully"}'
          schema:
            $ref: '#/components/schemas/PlanProcessorNotify'
      description: >-
        Returns "Location" response header which contains the relative URL to
        get the status of this request.
      headers:
        Location:
          schema:
            type: string
            description: Unique id generated for this request.
            example: /notification?request_id=7223372036854776000
    PlanNotifBadRequestError:
      content:
        application/json:
          example:
            Errors:
              Error:
                - Source: CustomerService
                  ReasonCode: bad.request
                  Description: Bad or malformed request.
                  Recoverable: false
                  Details: Invalid PAN (Primary Account Number).
          schema:
            $ref: '#/components/schemas/PlanNotifError'
      description: >-
        Bad Request: The server cannot or will not process the request due to an
        apparent client error (e.g., malformed request syntax, size too large,
        invalid request message framing, or deceptive request routing).
    PlanNotifUnauthorizedError:
      content:
        application/json:
          example:
            Errors:
              Error:
                - Source: CustomerService
                  ReasonCode: unauthorized
                  Description: Unauthorized to access the resource.
                  Recoverable: false
                  Details: User doesn't have access to the requested resource.
          schema:
            $ref: '#/components/schemas/PlanNotifError'
      description: >-
        Unauthorized: Authentication is required and has failed or has not been
        provided.
    PlanNotifForbiddenError:
      content:
        application/json:
          example:
            Errors:
              Error:
                - Source: CustomerService
                  ReasonCode: forbidden
                  Description: Unable to authorize the request.
                  Recoverable: false
                  Details: None
          schema:
            $ref: '#/components/schemas/PlanNotifError'
      description: >-
        Forbidden: User doesn't have a permission required to access the
        resource.
    PlanNotifNotFoundError:
      content:
        application/json:
          example:
            Errors:
              Error:
                - Source: CustomerService
                  ReasonCode: not.found
                  Description: Resource not found.
                  Recoverable: false
                  Details: >-
                    It looks like you are accessing a resource that doesn't
                    exist. Please go through the specifications to get actual
                    URL details..
          schema:
            $ref: '#/components/schemas/PlanNotifError'
      description: >-
        Not found error. The URI didn't match an existing resource, the server
        can't find the requested resource.
    PlanNotifTooManyRequestError:
      content:
        application/json:
          example:
            Errors:
              Error:
                - Source: CustomerService
                  ReasonCode: too.many.requests
                  Description: Too many requests.
                  Recoverable: true
                  Details: >-
                    You have exceeded the IP rate limit. Maximum allowed - 10
                    TPS.
          schema:
            $ref: '#/components/schemas/PlanNotifError'
      description: >-
        This kind of error indicates the user has sent too many requests in a
        given amount of time.
    PlanProcessorResponseBody:
      content:
        application/json:
          example: '{"status":"SUCCESS", "message":"Notification received successfully"}'
          schema:
            $ref: '#/components/schemas/PlanProcessorNotify'
      description: A new plan is created.
    Registration:
      description: Response object for pan registration.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Registration'
          examples:
            SuccessEmptyPanListRegistration:
              $ref: '#/components/examples/SuccessEmptyPanListRegistration'
            SuccessPanListWithPansRegistration:
              $ref: '#/components/examples/SuccessPanListWithPansRegistration'
            PartialSuccessListWithPansRegistration:
              $ref: '#/components/examples/PartialSuccessPansRegistration'
            FullFailurePansRegistration:
              $ref: '#/components/examples/FullFailurePansRegistration'
            FailurePanListRegistration:
              $ref: '#/components/examples/FailurePanListRegistration'
            UnencryptedPartialSuccessPanRegistration(For reference):
              $ref: '#/components/examples/UnencryptedPartialSuccessPanRegistration'
    BadRequestPanRegistrationError:
      description: >-
        This response code is returned when a request is invalid, or data in the
        request is not valid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorWrapper'
          examples:
            PanListName:
              $ref: '#/components/examples/BadRequestPanListNameValidationError'
            PanListNameRegex:
              $ref: '#/components/examples/BadRequestPanListNameRegexValidationError'
            PansNotPresentUpdateRequest:
              $ref: >-
                #/components/examples/BadRequestPansNotPresentUpdateRequestValidationError
            PanListIdRegex:
              $ref: '#/components/examples/BadRequestPanListIdRegexValidationError'
            InvalidEncryptedValueOrAccountRanges:
              $ref: >-
                #/components/examples/BadRequestInvalidEncryptedValueOrAccountRangesValidationError
            InvalidAccountRangeRegex:
              $ref: >-
                #/components/examples/BadRequestInvalidAccountRangeRegexValidationError
            InvalidAccountRangeForNewPanList:
              $ref: >-
                #/components/examples/BadRequestInvalidAccountRangeForNewPanListValidationError
            InvalidAccountRangeForExistingPanList:
              $ref: >-
                #/components/examples/BadRequestInvalidAccountRangeForExistingPanListValidationError
            PanListIdNotFound:
              $ref: '#/components/examples/BadRequestPanListIdNotFoundValidationError'
    Deregistration:
      description: Response object for pan deregistration.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Deregistration'
          examples:
            PartialSuccessPanDeregistration:
              $ref: '#/components/examples/PartialSuccessPanDeregistrationResponse'
            FullSuccessPanDeregistration:
              $ref: '#/components/examples/FullSuccessPanDeregistrationResponse'
            FailurePanDeregistration:
              $ref: '#/components/examples/FailurePanDeregistrationResponse'
            UnencryptedPartialSuccessPanDeregistration(For reference):
              $ref: >-
                #/components/examples/UnencryptedPartialSuccessPanDeregistrationResponse
    BadRequestPanDeregistrationError:
      description: >-
        This response code is returned when a request is invalid, or data in the
        request is not valid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorWrapper'
          examples:
            PanListIdRegex:
              $ref: '#/components/examples/BadRequestPanListIdRegexValidationError'
            PanListIdNull:
              $ref: '#/components/examples/BadRequestPanListIdNullValidationError'
            PanListIdNotFound:
              $ref: '#/components/examples/BadRequestPanListIdNotFoundValidationError'
            InvalidEncryptedValue:
              $ref: >-
                #/components/examples/BadRequestInvalidEncryptedValueValidationError
    ConsumerForbiddenError:
      description: >-
        This response code is returned when API or resource access is not
        approved for the client.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorWrapper'
          examples:
            ForbiddenError:
              $ref: '#/components/examples/ConsumerForbiddenError'
    ConsumerUnauthorized:
      description: Authorization information is missing or invalid.
      headers:
        Correlation-Id:
          $ref: '#/components/headers/Correlation-Id'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorWrapper'
          examples:
            Unauthorized:
              $ref: '#/components/examples/UnauthorizedError'
    UnauthorizedError:
      content:
        application/json:
          example:
            Errors:
              Error:
                - Source: mci-installment-bnpl-plans-api
                  ReasonCode: unauthorized
                  Description: Unauthorized to access the resource.
                  Details: None
                  Recoverable: false
          schema:
            $ref: '#/components/schemas/ErrorWrapper'
      description: >-
        Unauthorized: Authentication is required and has failed or has not been
        provided.
    PlanCreateInvalidInput:
      description: Invalid Input while processing Plan API.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorWrapper'
          examples:
            TransactionAmountMisMatch:
              $ref: '#/components/examples/TransactionAmountMisMatch'
            TransactionDateMisMatch:
              $ref: '#/components/examples/TransactionDateMisMatch'
            InvalidTransactionCurrency:
              $ref: '#/components/examples/InvalidTransactionCurrency'
            BlankPAN:
              $ref: '#/components/examples/BlankPAN'
            NonNumericPAN:
              $ref: '#/components/examples/NonNumericPAN'
            InvalidPANLength:
              $ref: '#/components/examples/InvalidPANLength'
            InvalidTokenPAN:
              $ref: '#/components/examples/InvalidTokenPAN'
            PANMisMatch:
              $ref: '#/components/examples/PANMisMatch'
            InvalidLengthMerchantName:
              $ref: '#/components/examples/InvalidLengthMerchantName'
            InvalidLengthMerchantURL:
              $ref: '#/components/examples/InvalidLengthMerchantURL'
            InvalidMerchantURL:
              $ref: '#/components/examples/InvalidMerchantURL'
            InvalidAcquirerId:
              $ref: '#/components/examples/InvalidAcquirerId'
            InvalidLengthAcquirerId:
              $ref: '#/components/examples/InvalidLengthAcquirerId'
            InvalidCountryCode:
              $ref: '#/components/examples/InvalidCountryCode'
            InvalidLengthMcc:
              $ref: '#/components/examples/InvalidLengthMcc'
            InvalidLengthMerchantId:
              $ref: '#/components/examples/InvalidLengthMerchantId'
            InvalidMerchantId:
              $ref: '#/components/examples/InvalidMerchantId'
            InvalidAmountType:
              $ref: '#/components/examples/InvalidAmountType'
            InvalidLengthSTAN:
              $ref: '#/components/examples/InvalidLengthSTAN'
            NonNumericSTAN:
              $ref: '#/components/examples/NonNumericSTAN'
            InvalidLengthRRN:
              $ref: '#/components/examples/InvalidLengthRRN'
            NonNumericRRN:
              $ref: '#/components/examples/NonNumericRRN'
            InvalidLengthAuthCode:
              $ref: '#/components/examples/InvalidLengthAuthCode'
            NonNumericAuthCode:
              $ref: '#/components/examples/NonNumericAuthCode'
            InvalidTransactionLinkId:
              $ref: '#/components/examples/InvalidTransactionLinkId'
            InvalidTransmissionDateTime:
              $ref: '#/components/examples/InvalidTransmissionDateTime'
            InvalidLocalTransactionDateTime:
              $ref: '#/components/examples/InvalidLocalTransactionDateTime'
            InvalidFrequency:
              $ref: '#/components/examples/InvalidFrequency'
            InvalidPresentedOffersDSP:
              $ref: '#/components/examples/InvalidPresentedOffersDSP'
            InvalidPresentedOffersDRNG:
              $ref: '#/components/examples/InvalidPresentedOffersDRNG'
    PlanCreated:
      headers:
        Location:
          schema:
            type: string
          description: >-
            The URL that the client should poll for a response status. Refer to
            GET /plans/{plan_id}.
      content:
        application/json:
          examples:
            Carded Installment Plan:
              description: >-
                This example shows a successful response for 'Mastercard
                Installments Payment Services product which includes planID &
                status.
              value:
                planId: 3d56f5a7-db48-41f0-875e-30920e8465f3
                status: CREATED
          schema:
            $ref: '#/components/schemas/CreatedInstallmentPlan'
      description: A new plan is created.
    Forbidden:
      description: Forbidden to access the resource.
      headers:
        Correlation-Id:
          $ref: '#/components/headers/Correlation-Id'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorWrapper'
          examples:
            Forbidden:
              $ref: '#/components/examples/Forbidden'
    OfferPresentmentsInvalidInput:
      description: Invalid input.
      headers:
        Correlation-Id:
          $ref: '#/components/headers/Correlation-Id'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorWrapper'
          examples:
            InvalidAcceptLanguage:
              $ref: '#/components/examples/InvalidAcceptLanguage'
            InvalidIsdCode:
              $ref: '#/components/examples/InvalidIsdCode'
            TransactionAmountInvalid:
              $ref: '#/components/examples/TransactionAmountInvalid'
            TransactionLocalDateTimeInvalid:
              $ref: '#/components/examples/TransactionLocalDateTimeInvalid'
            InvalidPrimaryAccountNumber:
              $ref: '#/components/examples/InvalidPrimaryAccountNumber'
            InvalidPrimaryAccountNumberSize:
              $ref: '#/components/examples/InvalidPrimaryAccountNumberSize'
            InvalidCurrencyCode:
              $ref: '#/components/examples/InvalidCurrencyCode'
            TransactionCurrencyInvalid:
              $ref: '#/components/examples/TransactionCurrencyInvalid'
            InvalidMerchantId:
              $ref: '#/components/examples/InvalidMerchantId'
            InvalidAcquirerId:
              $ref: '#/components/examples/InvalidAcquirerId'
            InvalidMerchantURL:
              $ref: '#/components/examples/InvalidMerchantURL'
            InvalidMerchantName:
              $ref: '#/components/examples/InvalidMerchantName'
            InvalidMcc:
              $ref: '#/components/examples/InvalidMcc'
            MissingCountryCode:
              $ref: '#/components/examples/MissingCountryCode'
            InvalidCountryCode:
              $ref: '#/components/examples/InvalidCountryCode'
            InvalidCountryCurrencyCodePair:
              $ref: '#/components/examples/InvalidCountryCurrencyCodePair'
            InvalidPublicKeyFingerprint:
              $ref: '#/components/examples/InvalidPublicKeyFingerprint'
            MissingMerchantParameters:
              $ref: '#/components/examples/MissingMerchantParameters'
            InvalidMerchantParameters:
              $ref: '#/components/examples/InvalidMerchantParameters'
            MissingCountyCodeInMerchantParameters:
              $ref: '#/components/examples/MissingCountyCodeInMerchantParameters'
            InvalidMerchantParameterCombinations:
              $ref: '#/components/examples/InvalidMerchantParameterCombinations'
    OfferPresentmentsSuccess:
      description: Successful response for Offer presentment.
      headers:
        Correlation-Id:
          $ref: '#/components/headers/Correlation-Id'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OffersGroup'
          examples:
            CardedInstallmentsOffers:
              $ref: '#/components/examples/CardedInstallmentsOffers'
            CardedInstallmentsOfferNotFound:
              $ref: '#/components/examples/CardedInstallmentsOffersNotFound'
    MerchantParticipationReference:
      description: >-
        Returns "Location" response header which contains the relative URL to
        get the status of this request.
      headers:
        Location:
          schema:
            type: string
            description: Unique id generated for this request.
            example: merchants/participations?request_id=7223372036854776000
    MidDetailsPage:
      description: The response object that contains the mids of a merchant.
      headers:
        Count:
          schema:
            $ref: '#/components/schemas/count'
        Offset:
          schema:
            $ref: '#/components/schemas/offset'
        Limit:
          schema:
            $ref: '#/components/schemas/limit'
        Total:
          schema:
            $ref: '#/components/schemas/total'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MidDetailsPage'
          examples:
            Mid Details Page:
              $ref: '#/components/examples/MidDetailsPage'
            Mid Details for Australia:
              $ref: '#/components/examples/EncryptedMidDetailsPageForAus'
    Merchants:
      description: The response object that contains the list of merchant objects.
      headers:
        Count:
          schema:
            $ref: '#/components/schemas/count'
        Offset:
          schema:
            $ref: '#/components/schemas/offset'
        Limit:
          schema:
            $ref: '#/components/schemas/limit'
        Total:
          schema:
            $ref: '#/components/schemas/total'
        Request-Status:
          schema:
            $ref: '#/components/schemas/status'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Merchants'
          examples:
            MID Merchant Participations:
              $ref: '#/components/examples/Merchants'
            MAID Merchant Participations:
              $ref: '#/components/examples/MaidMerchants'
            MID Merchant Participations For Australia:
              $ref: '#/components/examples/Merchants-Australia'
            RequestError:
              $ref: '#/components/examples/RequestError'
    MerchantSearches:
      description: The response object that contains the list of merchant objects.
      headers:
        Count:
          schema:
            $ref: '#/components/schemas/count'
        Offset:
          schema:
            $ref: '#/components/schemas/offset'
        Limit:
          schema:
            $ref: '#/components/schemas/limit'
        Total:
          schema:
            $ref: '#/components/schemas/total'
        Request-Status:
          schema:
            $ref: '#/components/schemas/status'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MerchantSearches'
          examples:
            MID Merchant Participations:
              $ref: '#/components/examples/Merchants-Search'
            MAID Merchant Participations:
              $ref: '#/components/examples/MaidMerchants-Searches'
            MID Merchant Participations For Australia:
              $ref: '#/components/examples/Merchants-Searches-Australia'
    AccountNotRegisteredError:
      description: >-
        This response code is returned when the server cannot find the account
        used to call this API.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorWrapper'
          examples:
            AccountNotRegisteredError:
              $ref: '#/components/examples/AccountNotRegisteredError'
    ForbiddenError:
      description: >-
        This response code is returned when API or resource access is not
        approved for the client.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorWrapper'
          examples:
            ForbiddenError:
              $ref: '#/components/examples/ForbiddenError'
    ResourceNotFoundError:
      description: This response code is returned when the request resource is not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorWrapper'
          examples:
            ForbiddenError:
              $ref: '#/components/examples/ResourceNotFoundError'
    BadRequestError:
      description: >-
        This response code is returned when a request is invalid, or data in the
        request is not valid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorWrapper'
          examples:
            InvalidCardProductError:
              $ref: '#/components/examples/InvalidCardProductError'
            InvalidFieldFormat:
              $ref: '#/components/examples/InvalidFieldFormat'
            InvalidFieldLength:
              $ref: '#/components/examples/InvalidFieldLength'
            InvalidFieldValue:
              $ref: '#/components/examples/InvalidFieldValue'
            MissingRequiredField:
              $ref: '#/components/examples/MissingRequiredField'
    InvalidRequestIdError:
      description: >-
        This response code is returned when a request is invalid, or data in the
        request is not valid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorWrapper'
          examples:
            InvalidRequestIdError:
              $ref: '#/components/examples/InvalidRequestIdError'
    NotAcceptableHeader:
      description: >-
        This response code is returned when a user enters anything except
        application/json in the Accept header.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorWrapper'
          examples:
            NotAcceptableHeader:
              $ref: '#/components/examples/NotAcceptableHeader'
    NotAcceptable:
      description: Accept header is invalid.
      headers:
        Correlation-Id:
          $ref: '#/components/headers/Correlation-Id'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorWrapper'
          examples:
            NotAcceptable:
              $ref: '#/components/examples/NotAcceptable'
    InvalidContentType:
      description: Content Type header is invalid.
      headers:
        Correlation-Id:
          $ref: '#/components/headers/Correlation-Id'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorWrapper'
          examples:
            InvalidContentType:
              $ref: '#/components/examples/InvalidContentType'
    PSPData:
      description: Success response. Returns only if the sync parameter is true.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PSPData'
    CompletionPSPData:
      description: Success response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CompletionPSPData'
          examples:
            Completed:
              $ref: '#/components/examples/ApprovedCompleted'
            In Progress:
              $ref: '#/components/examples/ApprovedInProgress'
    Accepted:
      description: The request was successful and will be processed asynchronously.
      headers:
        Location:
          schema:
            type: string
          description: >-
            The URL that the client should poll for a response status. Refer to
            GET /approvals/{plan_id}.
    Unauthorized:
      description: Unauthorized to access the resource.
      headers:
        Correlation-Id:
          $ref: '#/components/headers/Correlation-Id'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorWrapper'
          examples:
            Unauthorized:
              $ref: '#/components/examples/Unauthorized'
    NotFound:
      description: Not Found.
      headers:
        Correlation-Id:
          $ref: '#/components/headers/Correlation-Id'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorWrapper'
          examples:
            NotFound:
              $ref: '#/components/examples/NotFound'
    MethodNotAllowed:
      description: 'Method Not Allowed: Method used to request the resource is not allowed.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorWrapper'
          examples:
            MethodNotAllowed:
              $ref: '#/components/examples/MethodNotAllowed'
    InstallmentPlan:
      content:
        application/json:
          examples:
            Initiated Plan with Consumer Selected Offer:
              $ref: '#/components/examples/InitiatedPlanOfferSelected'
            Initiated Plan with Lender Selected Offer:
              $ref: '#/components/examples/InitiatedPlanProviderSelected'
            Approved Plan:
              $ref: '#/components/examples/ApprovedPlan'
            Rejected Plan:
              $ref: '#/components/examples/RejectedPlan'
          schema:
            $ref: '#/components/schemas/InstallmentPlan'
      description: |
        The plan is found and returned based on plan ID.
  schemas:
    PlanProcessorNotify:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          description: Plan Notification status. Possible values - [ SUCCESS, FAILURE ]
          example: SUCCESS
          maxLength: 12
          minLength: 7
        message:
          type: string
          description: Human readable short description for the notification processing.
          example: Notification Received Successfully
          maxLength: 256
          minLength: 0
    PlanNotifMerchant:
      type: object
      properties:
        name:
          description: >-
            Merchant legal name or "doing business as" name. For 'Mastercard
            Installments Payment Services', this will be optional parameter.
          type: string
          minLength: 1
          maxLength: 100
          example: Globex Decor
        country:
          type: string
          description: Country code in ISO 3166 alpha 3 format. (ISO DE-43 SF-5)
          example: USA
          maxLength: 3
          minLength: 3
        mcc:
          type: string
          description: Merchant Category Code. (ISO DE-18)
          example: '1711'
          maxLength: 4
          minLength: 4
        acquirerId:
          description: >-
            Acquiring Institution ID Code to identifies the acquiring
            institution. (ISO DE-32)
          type: string
          minLength: 1
          maxLength: 6
          example: '456789'
        merchantId:
          description: Merchant ID assigned by Acquirer. (ISO DE-42)
          type: string
          minLength: 1
          maxLength: 15
          example: '456789'
        url:
          description: URL for the Merchant.
          type: string
          minLength: 1
          maxLength: 50
          example: www.globexdecor.com
    PlanProcessorPost:
      type: object
      properties:
        planId:
          $ref: '#/components/schemas/PlanNotifPlanIdField'
        issuerCid:
          $ref: '#/components/schemas/issuerCid'
        issuerIca:
          $ref: '#/components/schemas/issuerIca'
        merchant:
          $ref: '#/components/schemas/PlanNotifMerchant'
        offerId:
          $ref: '#/components/schemas/PlanNotifOfferIdField'
        planInstallmentInformation:
          $ref: '#/components/schemas/PlanNotifPlanInstallmentInformation'
        schedulePayments:
          $ref: '#/components/schemas/PlanNotifSchedulePayments'
        transaction:
          $ref: '#/components/schemas/PlanNotifTransaction'
        sensitiveData:
          $ref: '#/components/schemas/PlanNotifSensitiveDataField'
        transactionOffers:
          $ref: '#/components/schemas/TransactionOffers'
      required:
        - consumer
        - planId
        - issuerCid
        - issuerIca
        - offerId
        - schedulePayments
        - planInstallmentInformation
        - transaction
    PlanNotifOfferIdField:
      type: string
      description: Unique identifier for installment offers.
      example: '24092019'
      maxLength: 64
      minLength: 8
    PlanNotifPlanIdField:
      type: string
      format: uuid
      description: A unique number assigned to an installment plan
      example: 3d56f5a7-db48-41f0-875e-30920e8465f3
      maxLength: 36
      minLength: 36
    issuerCid:
      type: string
      description: Customer ID of the Issuer
      maxLength: 10
      example: '202020'
    issuerIca:
      type: string
      description: ICA of the Issuer
      maxLength: 11
      example: '7432'
    PlanNotifPlanInstallmentInformation:
      type: object
      required:
        - frequency
        - tenure
      description: Plan Installment Information set of fields.
      properties:
        apr:
          type: number
          format: double
          description: Annual Percentage Rate (APR).
          example: 25.03
          exclusiveMaximum: false
          exclusiveMinimum: false
          maximum: 200
          minimum: 0
        currency:
          type: string
          description: Currency code according to ISO 4217.
          example: USD
          maxLength: 3
          minLength: 3
        frequency:
          type: string
          description: >-
            Frequency of installment (single installment time duration).It will
            be one of the [WEEKLY, BIWEEKLY, MONTHLY]
          example: BIWEEKLY
          maxLength: 20
          minLength: 3
        firstInstallmentAmount:
          type: number
          format: double
          description: Amount to be paid for the first installment.
          example: 100
        otherInstallmentAmount:
          type: number
          format: double
          description: >-
            Subsequent Installment amounts with minor unit according to ISO
            4217.
          example: 100
        feeValue:
          type: number
          format: double
          description: Installment fee amount.
          example: 2.05
        tenure:
          type: integer
          format: int32
          description: Total number of installments for an offer. Offer tenure.
          example: 2
          maximum: 99
          minimum: 2
        totalAmount:
          type: number
          format: double
          description: >-
            The total amount owed by the cardholder on an installment purchase
            inclusive of fees, tax and interest for the installment plan.
          example: 200
    PlanNotifSchedulePayments:
      type: array
      description: List of Schedule Payments.
      items:
        $ref: '#/components/schemas/PlanNotifSchedulePayment'
      maxItems: 99
    PlanNotifSchedulePayment:
      type: object
      required:
        - installmentAmount
        - dueDate
        - installmentNumber
      properties:
        installmentAmount:
          type: number
          format: double
          description: Amount to be paid in an installment.
          example: 100
        dueDate:
          type: string
          description: Due date for an installment.
          example: 2024-3-21
          maxLength: 10
          minLength: 8
        installmentNumber:
          type: integer
          format: int32
          description: Number of an installment.
          example: 1
          maximum: 99
          minimum: 1
    PlanNotifTransaction:
      type: object
      properties:
        amount:
          type: number
          format: double
          description: Transaction amount. (ISO DE-4)
          example: 2.05
        currency:
          type: string
          description: Currency code according to ISO 4217. (ISO DE-44)
          example: USD
          maxLength: 3
          minLength: 3
        stan:
          description: >-
            The System Trace Audit Number (STAN) for this transaction. (ISO
            DE-11)
          type: string
          minLength: 1
          maxLength: 6
          example: 123456
        rrn:
          description: >-
            The Retrieval Reference Number (RRN) for this transaction. (ISO
            DE-37)
          type: string
          minLength: 0
          maxLength: 12
          example: 123456123456
        authorizationCode:
          description: Authorization identification response (ISO DE-38).
          type: string
          minLength: 0
          maxLength: 6
          example: 123456
        localDateTime:
          description: >-
            Transaction local date. [Date and Time
            RFC](https://datatracker.ietf.org/doc/html/rfc3339). (ISO DE-12, ISO
            DE-13).
          type: string
          example: '2012-01-01T00:00:00Z'
        transmissionDateTime:
          description: >-
            Transaction transmission date. [Date and Time
            RFC](https://datatracker.ietf.org/doc/html/rfc3339). (ISO DE-7)
          type: string
          example: '2012-01-01T00:00:00Z'
        transactionLinkId:
          description: >-
            Unique Value generated by Mastercard to track the transaction (ISO
            DE-105)
          type: string
          minLength: 0
          maxLength: 22
          example: 123456adada12345
      required:
        - amount
        - currency
    PlanNotifSensitiveDataField:
      title: sensitiveData
      type: object
      description: >-
        This object explains the definition of the Highly Sensitive and Special
        handling data fields, which will be obtained when customers decrypts the
        'encryptedValue' field using JWE decryption using Mastercard provided
        client decryption libraries.
      properties:
        consumer:
          properties:
            primaryAccountNumber:
              type: number
              description: >-
                Consumer Credit or Debit card number (PAN) to offer Installments
                (ISO-DE2). This field will always contain a funding PAN, even if
                the transaction has been performed using a tokenized PAN.
              maxLength: 19
              minLength: 11
              example: 5110921032063789
      required:
        - consumer
    PlanNotifErrors:
      type: object
      description: A single error
      properties:
        Description:
          type: string
          description: >-
            A description for this specific occurrence corresponding to the
            ReasonCode
          example: Invalid Format
          maxLength: 500
          minLength: 1
        Details:
          type: string
          description: >-
            More details of this specific error. This is an optional field and
            is sometimes used to give a more comprehensive description of the
            error that has occurred, when required.
          example: purchaseDate, billingAddress.city
          maxLength: 1000
          minLength: 1
        ReasonCode:
          type: string
          description: A code defining the error, as defined in documentation
          example: VALIDATION_ERROR
          maxLength: 36
          minLength: 1
        Recoverable:
          type: boolean
          description: >-
            Whether or not retrying this request could result in a successful
            response
          example: false
        Source:
          type: string
          description: The source of the problem. i.e where the error occurred
          example: TRA
          maxLength: 15
          minLength: 1
    PlanNotifError:
      type: object
      description: Error response wrapper
      properties:
        Errors:
          $ref: '#/components/schemas/PlanNotifErrorWrapper'
      required:
        - Errors
    PlanNotifErrorWrapper:
      type: object
      properties:
        Error:
          type: array
          description: Object that contains the list of errors
          items:
            $ref: '#/components/schemas/PlanNotifErrors'
      required:
        - Error
    OfferParametersEncryptedPayload:
      description: >-
        Offer Presentment request parameter compromise of transaction, merchant
        and consumer parameters. Based on requested parameter different
        Installments flow will get trigger, if Primary Account number is passed
        in request than Carded flow will be triggered or else BNPL UC3 (realtime
        offer) flow. Highly sensitive parameter (PAN) needs to be encrypted and
        wrapped under encryptedValue refer example for more detail.
      type: object
      allOf:
        - $ref: '#/components/schemas/OfferParameters'
    PlanConsumer:
      type: object
      description: >-
        Consumer parameters for Plan API request. Encryption required for this
        object and this object will be a part of the encryptedValue field.
      properties:
        primaryAccountNumber:
          type: number
          description: >-
            Consumer Credit or Debit card number (PAN) to offer Installments
            (ISO-DE2). Token PAN is also supported. For **Installments on
            Cards**, this is mandatory parameter.
          example: '5242400000784964'
          maxLength: 19
          minLength: 11
          maximum: 10000000000000000000
          minimum: 11111111111
    PlanMerchant:
      type: object
      properties:
        country:
          type: string
          description: Country code in ISO 3166 alpha 3 format.
          example: USA
          maxLength: 3
          minLength: 3
        mcc:
          type: string
          description: Merchant Category Code.
          example: '1711'
          maxLength: 4
          minLength: 4
        url:
          description: URL for the Merchant.
          type: string
          minLength: 1
          maxLength: 50
          example: www.globexdecor.com
        acquirerId:
          description: >-
            Acquiring Institution ID Code to identifies the acquiring
            institution. (ISO DE-32).
          type: string
          minLength: 1
          maxLength: 6
          example: '456789'
        merchantId:
          description: Merchant ID assigned by Acquirer. (ISO DE-42).
          type: string
          minLength: 1
          maxLength: 15
          example: '456789'
    ErrorWrapper:
      title: ErrorWrapper
      type: object
      description: The error response object which gets returned in case of any error.
      required:
        - Errors
      properties:
        Errors:
          $ref: '#/components/schemas/Errors'
    Errors:
      title: Errors
      type: object
      description: Error object which returns the list of Error objects.
      required:
        - Error
      properties:
        Error:
          $ref: '#/components/schemas/ErrorList'
    ErrorList:
      type: array
      minItems: 1
      items:
        $ref: '#/components/schemas/Error'
    Error:
      title: Error
      type: object
      description: Error object which contains details about the Error.
      required:
        - Source
        - ReasonCode
        - Description
        - Recoverable
      properties:
        Source:
          type: string
          description: The application name that generated this error.
          minLength: 1
          maxLength: 100
          example: Mastercard Installments APIs
        ReasonCode:
          type: string
          description: >-
            A unique constant identifying the error case encountered during
            request processing.
          minLength: 1
          maxLength: 100
          example: invalid.request.parameter
        Description:
          type: string
          description: Short description of the ReasonCode field.
          minLength: 10
          maxLength: 1000
          example: >-
            One of the request parameters is invalid, try again with the correct
            request.
        Recoverable:
          type: boolean
          description: >-
            Indicates whether this error will always be returned for this
            request, or retrying could change the outcome.
          example: false
        Details:
          type: string
          description: >-
            (Optional) Where appropriate, indicates detailed information about
            data received and calculated during request processing, to help the
            user with diagnosing errors.
          minLength: 0
          maxLength: 5000
          example: paymentCardId size must be between 36 and 36
    PanRegistrationBody:
      type: object
      description: Request object for pan registration
      properties:
        panListName:
          type: string
          example: Christmas Offers panList
          pattern: ^[a-zA-Z0-9\s-]{1,64}$
          description: The name of the panList.
        panListId:
          type: string
          description: The unique identifier for the panList.
          pattern: ^[0-9]{18}$
          example: '230417253818957824'
        accountRange:
          $ref: '#/components/schemas/AccountRequestRange'
        sensitiveData:
          $ref: '#/components/schemas/sensitiveConsumerReqData'
    AccountRequestRange:
      type: object
      description: An object representing an account range.
      required:
        - accountRangeLow
        - accountRangeHigh
      properties:
        accountRangeLow:
          type: string
          description: The lower boundary of the account range.
          example: '5110920000000000'
          pattern: ^[0-9]{11,19}$
        accountRangeHigh:
          type: string
          description: The upper boundary of the account range.
          example: '5110929999999999'
          pattern: ^[0-9]{11,19}$
    Registration:
      type: object
      description: pan encrypted registration object
      properties:
        successfulCount:
          type: string
          description: Count of the successful pans
          example: '1'
        failureCount:
          type: string
          description: Count of the failed pans
          example: '1'
        panList:
          $ref: '#/components/schemas/ViewPanList'
        accountRange:
          $ref: '#/components/schemas/AccountRange'
        sensitiveData:
          $ref: '#/components/schemas/sensitiveConsumerResData'
    ViewPanList:
      type: object
      description: Information about the associated panList
      properties:
        panListId:
          type: string
          description: The unique identifier for the panList.
          maxLength: 18
          example: '230417253818957824'
        panListName:
          type: string
          description: The name of the panList.
          maxLength: 64
          example: Christmas Offers panList
    AccountRange:
      type: object
      description: Information about the account range
      properties:
        cid:
          type: string
          description: Customer ID associated with the account range
          maxLength: 10
          example: '202020'
        ica:
          type: string
          description: Issuing ICA of the account range
          maxLength: 11
          example: '7432'
        country:
          type: string
          description: Country associated with the account range
          maxLength: 3
          example: USA
        accountRangeLow:
          type: string
          description: Lower bound of the account range
          maxLength: 25
          example: '5110920000000000'
        accountRangeHigh:
          type: string
          description: Upper bound of the account range
          maxLength: 25
          example: '5110929999999999'
    sensitiveConsumerReqData:
      title: sensitiveData
      type: object
      description: >-
        This object explains the definition of the Highly Sensitive and Special
        handling data fields, which will be obtained when Mastercard decrypts
        the 'encryptedValue' field using JWE decryption using Mastercard
        provided client decryption libraries.
      properties:
        pans:
          $ref: '#/components/schemas/Pans'
    Pans:
      title: Pans
      type: array
      description: An array of pan objects (Unencrypted encryptedValue).
      items:
        $ref: '#/components/schemas/Pan'
    Pan:
      title: Pan
      type: object
      description: Pan to be registered
      properties:
        pan:
          type: string
          pattern: ^[0-9]{11,19}$
          description: >-
            The PAN (Primary Account Number) of an individual. Every pan is
            validated against Luhn algorithm.
          example: '5110923494472279'
    sensitiveConsumerResData:
      title: sensitiveData
      type: object
      description: >-
        This object explains the definition of the Highly Sensitive and Special
        handling data fields, which will be obtained when Mastercard decrypts
        the 'encryptedValue' field using JWE decryption using Mastercard
        provided client decryption libraries.
      properties:
        pans:
          $ref: '#/components/schemas/ViewPans'
    ViewPans:
      title: View panLists
      type: array
      description: >-
        List of failed pans associated with the request (Decrypted
        encryptedValue)
      items:
        $ref: '#/components/schemas/ViewPan'
    ViewPan:
      title: ViewPan
      type: object
      description: pan to be registered
      properties:
        pan:
          type: string
          description: The PAN (Primary Account Number) of an individual.
          example: '5110923494472279'
        error:
          $ref: '#/components/schemas/PanError'
    PanError:
      title: PanError
      type: object
      description: >-
        This contains the error description and reason about why the pan failed
        during registration/deregistration
      properties:
        reasonCode:
          type: string
          description: >-
            A unique constant identifying the error case encountered during
            request processing.
          minLength: 1
          maxLength: 100
          example: invalid.request.parameter
        description:
          type: string
          description: Short description of the ReasonCode field.
          minLength: 10
          maxLength: 1000
          example: >-
            One of the request parameters is invalid, try again with correct
            request.
    PanDeregistrationBody:
      type: object
      description: Request object for a pan deregistration
      required:
        - panListId
      properties:
        panListId:
          type: string
          description: The unique identifier for the panList.
          pattern: ^[0-9]{18}$
          example: '230417253818957824'
        sensitiveData:
          $ref: '#/components/schemas/sensitiveConsumerReqData'
    Deregistration:
      type: object
      description: pan deregistration object
      properties:
        panListId:
          type: string
          description: The unique identifier for the panList.
          maxLength: 18
          example: '230417253818957824'
        successfulCount:
          type: string
          description: Count of the successful pans
          example: '1'
        failureCount:
          type: string
          description: Count of the failed pans
          example: '1'
        sensitiveData:
          $ref: '#/components/schemas/sensitiveConsumerResData'
    TransactionParameters:
      description: >-
        Transaction parameters contains transaction related details including
        date time information.
      type: object
      required:
        - amount
        - currency
        - localDateTime
      properties:
        amount:
          description: >-
            Amount with major unit according to ISO 4217. Amount is inclusive of
            shipping and taxes cost for the transaction.
          type: number
          format: double
          example: 100.52
        currency:
          description: Alpha numeric currency code as per ISO 4217.
          type: string
          minLength: 3
          maxLength: 3
          example: USD
        localDateTime:
          description: >-
            Local Transaction date and time. [Date and Time
            RFC](https://datatracker.ietf.org/doc/html/rfc3339).
          type: string
          example: '2012-01-01T00:00:00Z'
    MerchantParameters:
      description: >-
        Merchant parameters contains Merchant details which is required to
        identify Bilateral or Merchant Funded Offer. Certain parameters need to
        be passed together to make it identifiable and below is possible
        parameter sets - Merchant Id, Acquirer Id and Country - Name and Country
        - URL and Country UC3 supported field are Country, MCC and Acceptor
      type: object
      properties:
        name:
          description: Merchant Legal name or doing business as name
          type: string
          minLength: 1
          maxLength: 100
          example: Globex Decor
        country:
          description: >-
            Alpha 3 country code according to ISO 3166. For Mastercard
            Installments Payment Services, this will be optional parameter.
          type: string
          minLength: 3
          maxLength: 3
          example: USA
        mcc:
          description: Merchant Category Code.
          type: string
          minLength: 4
          maxLength: 4
          example: '1711'
        url:
          description: URL for the Merchant.
          type: string
          minLength: 1
          maxLength: 50
          example: www.globexdecor.com
        acquirerId:
          description: >-
            Acquiring Institution ID to identify the acquiring institution. This
            is mandatory if 'merchantId' field is provided. (ISO DE-32)
          type: string
          minLength: 1
          maxLength: 6
          example: '456789'
        merchantId:
          description: >-
            Merchant ID assigned by Acquirer. This is mandatory if 'acquirerId'
            field is provided. (ISO DE-42)
          type: string
          minLength: 1
          maxLength: 15
          example: '456789'
    OfferParameters:
      description: Offer Presentment request parameters.
      required:
        - transaction
      properties:
        transaction:
          $ref: '#/components/schemas/TransactionParameters'
        merchant:
          $ref: '#/components/schemas/MerchantParameters'
        sensitiveData:
          $ref: '#/components/schemas/SensitiveDataField'
    OffersGroup:
      type: object
      description: Base object for offer presentments response.
      required:
        - total
        - offerTransactionId
      properties:
        total:
          description: The total number of eligible installments offers in response.
          type: integer
          example: 10
        offerTransactionId:
          description: >-
            Unique identifier for installment offers presentment transaction. It
            will be snowflake identifier format.
          type: string
          format: string
          minLength: 8
          maxLength: 40
          example: '1763137029152964608'
        offers:
          description: List of Offers.
          type: array
          items:
            $ref: '#/components/schemas/OfferGroupAndPriority'
        eligibilityMessages:
          description: >-
            List of eligibility messages. This only applies to Installments on
            card.
          type: array
          items:
            $ref: '#/components/schemas/EligibilityMessage'
    OfferGroupAndPriority:
      description: Offer object with cardinal priority.
      type: object
      allOf:
        - $ref: '#/components/schemas/Offer'
    EligibilityMessage:
      description: >-
        Eligibility message when no offer found. This will be only available in
        response in case of Installment on card offers.
      type: object
      properties:
        reasonCode:
          description: Reason code when no offer found
          type: string
          example: consumer.not.eligible
        message:
          description: Eligibility message for no offer found
          type: string
          example: Consumer is not eligible for Installments
    Offer:
      description: Offer response model with Repayment Schedule.
      type: object
      required:
        - priority
        - offerId
        - offerType
        - currencySymbol
        - tenure
        - frequency
        - totalAmount
        - otherInstallmentAmount
        - feeType
        - provider
        - offerBeginDatetime
        - offerEndDatetime
      properties:
        priority:
          description: >-
            Offer priority is set based on lowest other repayment amount, lowest
            will come on top
          type: number
          example: 1
        objectType:
          description: Response type discriminator.
          type: string
          minLength: 5
          maxLength: 25
          example: Offer
        offerId:
          description: Unique identifier for installment offers.
          type: string
          format: string
          minLength: 8
          maxLength: 64
          example: '24092019'
        offerType:
          description: >-
            For 'Carded Installments', Offer Type will CARDED_OFFER and for
            external Issuer carded/realtime offer it will be
            'CARDED_EXTERNAL_REALTIME'
          type: string
          minLength: 3
          maxLength: 50
          example: CARDED_OFFER
        offerDisplayText:
          description: Display text of the offer.
          type: string
          minLength: 3
          maxLength: 500
          example: 24 monthly payments of $17.13
        currencySymbol:
          description: Symbol of currency for all amounts within offer response.
          type: string
          minLength: 1
          maxLength: 1
          example: $
        productCode:
          description: >-
            Mastercard Installment Product Code. One of the [SPP, SPS, ETA, ETB,
            ETC, ETD, ETE, ETF, ETG] for BNPL. For 'Carded Installments' and
            'Carded External Offer', it will be optional parameter.
          type: string
          minLength: 3
          maxLength: 5
          example: spp
        apr:
          description: >-
            Annual Percentage Rate (APR) for an offer. For Carded External
            Offer, it will be optional parameter.
          type: number
          format: double
          example: 10.1
        tenure:
          description: Total number of installments for an offer. Offer tenure.
          type: integer
          minimum: 2
          example: 6
        frequency:
          description: >-
            Frequency of installment (Single installment time duration). It will
            be one of the [WEEKLY, BIWEEKLY, MONTHLY, 15DAYS].
          type: string
          minLength: 5
          maxLength: 20
          example: WEEKLY
        interestRate:
          description: >-
            Interest rate for the offer. For Carded External Offer, it will be
            optional parameter.
          type: number
          format: double
          example: 2
        firstInstallmentSchedule:
          description: >-
            This defines when customer Installments starts, possible value
            transaction date or after one cycle. For Carded External Offer, it
            will be optional parameter.
          type: string
          pattern: ^(?:TRANSACTION_DATE|DELAY_REPAYMENT)$
          example: TRANSACTION_DATE
        totalAmount:
          description: >-
            Total offer amount including fee and interest with major unit
            according to ISO 4217.
          type: number
          format: double
          example: 400
        firstInstallmentAmount:
          description: >-
            Amount to be paid in as a first installment. For Carded External
            Offer, it will be optional parameter.
          type: number
          format: double
          example: 200
        otherInstallmentAmount:
          description: Single Installment amount with major unit according to ISO 4217.
          type: number
          format: double
          example: 100
        feeType:
          description: >-
            Type of the fee for the offer. It will be one of the [NO_FEES,
            FIXED_AMT, PRCENTG (Percentage of transaction amount)].
          type: string
          minLength: 5
          maxLength: 20
          example: FIXED_AMT
        feeValue:
          description: >-
            Fees values based on type it can be either Fixed amount or
            Percentage to applied in transaction amount. It will be optional if
            feeType is NO_FEES.
          type: number
          format: double
          example: 10.1
        feeDistribution:
          description: >-
            Fee distribution type denotes how fee will be collected for the
            offer. It will be one of [FIRST_INSTALLMENT,
            SPREAD_ALL_INSTALLMENT].

            - (1) FIRST_INSTALLMENT- Means entire fees will be collected on
            first installment.

            - (2) SPREAD_ALL_INSTALLMENT- Mean fees will be applied equally
            among all installments.


            It will be optional if feeType is NO_FEES. For Carded External
            Offer, it will be optional parameter.
          type: string
          minLength: 5
          maxLength: 25
          example: FIRST_INSTALLMENT
        offerBeginDatetime:
          description: >-
            Start date for provider's offer for a consumer. For Carded External
            Offer, it will be optional parameter. [Date and Time
            RFC](https://datatracker.ietf.org/doc/html/rfc3339).
          type: string
          example: '2012-01-01T00:00:00-05:00'
        offerEndDatetime:
          description: >-
            End date for provider's offer for a consumer. For Carded External
            Offer, it will be optional parameter. [Date and Time
            RFC](https://datatracker.ietf.org/doc/html/rfc3339).
          type: string
          example: '2022-07-31T23:59:59-04:00'
        selectable:
          description: >-
            Indicate that offer is selectable or non selectable for 'new loan'.
            It will be optional for 'Carded Installments' and 'Carded External
            Offer'.
          type: boolean
          example: false
        provider:
          $ref: '#/components/schemas/Provider'
        schedulePayments:
          description: >-
            List of installment as per repayment schedule. This is optional
            object for offer presentment 'Offer Details'.
          type: array
          items:
            $ref: '#/components/schemas/SchedulePayments'
    Provider:
      description: Provider details object.
      type: object
      required:
        - providerId
        - providerName
        - providerLogoUrl
      properties:
        providerId:
          description: >-
            Unique identifier for installment offer provider. Provider can be
            issuer or Installment Program Provider.
          type: string
          format: uuid
          example: b5cc59e6-7a89-11ec-90d6-0242ac120003
        cid:
          description: Company ID for installment offer.
          type: string
          example: '123456'
        providerName:
          description: Installment offer Provider name.
          type: string
          minLength: 1
          maxLength: 100
          example: Partner Bank
        providerLogoUrl:
          description: Installment offer Provider logo url.
          type: string
          minLength: 10
          maxLength: 2000
          format: url
          pattern: >-
            https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&//=]*)
          example: https://content.partnerbank.com/logo.png
        disclosure:
          description: >-
            Installment offer provider disclosure/T&C applies for given
            installment offer.
          type: string
          minLength: 0
          maxLength: 500
          example: >-
            Your repayment terms will depend on your APR and loan term for which
            you qualify. You may qualify for a payment as low as $97.82 up to
            $437.00 depending on your creditworthiness, loan term, and
            enrollment in AutoPay at origination.
    PlanSchedulePayments:
      type: array
      description: List of installments as per Schedule payments.
      items:
        $ref: '#/components/schemas/SchedulePayment'
      maxItems: 99
    SchedulePayment:
      type: object
      description: >-
        Schedule Payments of the offer selected by cardholder. This object is
        mandatory for **Mastercard Installments Payment Services**.
      properties:
        installmentAmount:
          type: number
          format: double
          description: >-
            Amount to be paid in an installment. This is mandatory for
            'Mastercard Installments Payment Services product.
          example: 100
          exclusiveMaximum: false
          exclusiveMinimum: false
          maximum: 1000000000000000
          minimum: 0
        dueDate:
          type: string
          description: >-
            Due date for an installment. This is mandatory for 'Mastercard
            Installments Payment Services product.
          example: 2023-5-21
          maxLength: 10
          minLength: 8
        installmentNumber:
          type: integer
          format: int32
          description: >-
            Number of an installment. This is mandatory for 'Mastercard
            Installments Payment Services product.
          example: 1
          maximum: 99
          minimum: 1
    SchedulePayments:
      description: Installment loan repayment details
      type: object
      required:
        - installmentNumber
        - installmentAmount
        - dueDate
      properties:
        installmentNumber:
          description: Number of an installment.
          type: integer
          minimum: 1
          example: 1
        installmentAmount:
          description: >-
            Amount to be paid in a installment with major unit according to ISO
            4217.
          type: number
          format: double
          example: 100
        dueDate:
          description: Due date for a installment.
          type: string
          format: date
          example: '2022-05-01'
          minLength: 10
          maxLength: 50
    CreatedInstallmentPlan:
      type: object
      properties:
        planId:
          $ref: '#/components/schemas/PlanIdField'
        status:
          $ref: '#/components/schemas/StatusField'
    CardedMerchant:
      allOf:
        - $ref: '#/components/schemas/PlanMerchant'
        - type: object
          properties:
            name:
              description: >-
                Merchant legal name or "doing business as" name. For 'Mastercard
                Installments Payment Services', this will be optional parameter.
              type: string
              minLength: 1
              maxLength: 100
              example: Globex Decor
            url:
              description: URL for the Merchant .
              type: string
              minLength: 1
              maxLength: 50
              example: www.globexdecor.com
            acquirerId:
              description: >-
                Acquiring Institution ID Code to identifies the acquiring
                institution. (ISO DE-32).
              type: string
              minLength: 1
              maxLength: 6
              example: '456789'
            merchantId:
              description: Merchant ID assigned by Acquirer. (ISO DE-42).
              type: string
              minLength: 1
              maxLength: 15
              example: '456789'
    CardedPlanInstallmentInformation:
      allOf:
        - $ref: '#/components/schemas/PlanInstallmentInformation'
        - type: object
          properties:
            firstInstallmentAmount:
              type: number
              format: double
              description: Amount to be paid for the first installment.
              example: 100
              exclusiveMaximum: false
              exclusiveMinimum: false
              maximum: 1000000000000000
              minimum: 0
            otherInstallmentAmount:
              type: number
              format: double
              description: >-
                Subsequent Installment amount with minor unit according to ISO
                4217.
              example: 200
              maximum: 1000000000000000
              minimum: 0
            feeValue:
              type: number
              format: double
              description: >-
                Fees values based on type it can be either Fixed amount or
                Percentage to applied in transaction amount. This is mandatory
                for 'Mastercard Installments Payment Services product.
              example: 2.05
              exclusiveMaximum: false
              exclusiveMinimum: false
              maximum: 1000000000000000
              minimum: 0
    CardedTransaction:
      allOf:
        - $ref: '#/components/schemas/Transaction'
        - type: object
          properties:
            amountType:
              type: string
              description: Transaction amount type. Possible values can be PURCHASE, FINAL.
              example: PURCHASE
            stan:
              description: >-
                The System Trace Audit Number (STAN) for this transaction. (ISO
                DE-11).
              type: string
              minLength: 1
              maxLength: 6
              example: 123456
            rrn:
              description: >-
                The Retrieval Reference Number (RRN) for this transaction. (ISO
                DE-37).
              type: string
              minLength: 0
              maxLength: 12
              example: 123456123456
            authorizationCode:
              description: >-
                Value generated by the issuing bank in response to a proposal to
                transfer funds (ISO DE-38).
              type: string
              minLength: 0
              maxLength: 6
              example: 123456
            localDateTime:
              description: >-
                Transaction local date. [Date and Time
                RFC](https://datatracker.ietf.org/doc/html/rfc3339). (ISO DE-12,
                ISO DE-13). If amount type is purchase then populate purchase
                date time else populate ISO transaction date time.
              type: string
              example: '2023-01-01T00:00:00Z'
            transmissionDateTime:
              description: >-
                Transaction transmission date. [Date and Time
                RFC](https://datatracker.ietf.org/doc/html/rfc3339). (ISO DE-7).
              type: string
              example: '2023-01-01T00:00:00Z'
            transactionLinkId:
              description: >-
                Unique Value generated by Mastercard to track the transaction
                (ISO DE-105).
              type: string
              minLength: 0
              maxLength: 22
              example: 123456dasda123456
          required:
            - amountType
    SensitiveDataField:
      type: object
      description: |-
        Mandatory for Carded Installments
             - Plain payload which contains Consumer Primary Account Number in encrypted format, refer example 'Carded Installments Offers Request Plain' to see payload (sensitiveData object) in plain format.
             - Represented as the concatenation of the Base64 encoded JWE Protected Header, JWE Encrypted Key, JWE Initialization Vector, JWE Ciphertext, and JWE Authentication Tag separated by '.'
      properties:
        consumer:
          properties:
            primaryAccountNumber:
              type: number
              description: >-
                Consumer Credit or Debit card number (PAN) to offer Installments
                (ISO-DE2). This field can contain both funding and tokenized
                PAN. For 'Carded Installments', this will be mandatory
                parameter.
              maxLength: 19
              minLength: 11
              example: 5110921032063789
          required:
            - primaryAccountNumber
    PlanPost:
      type: object
      properties:
        offerTransactionId:
          $ref: '#/components/schemas/OfferTransactionIdField'
        merchant:
          $ref: '#/components/schemas/CardedMerchant'
        offerId:
          $ref: '#/components/schemas/OfferIdField'
        planInstallmentInformation:
          $ref: '#/components/schemas/CardedPlanInstallmentInformation'
        providerId:
          $ref: '#/components/schemas/ProviderIdField'
        schedulePayments:
          $ref: '#/components/schemas/PlanSchedulePayments'
        transaction:
          $ref: '#/components/schemas/CardedTransaction'
        sensitiveData:
          $ref: '#/components/schemas/SensitiveDataField'
        transactionOffers:
          $ref: '#/components/schemas/TransactionOffers'
      required:
        - providerId
        - transaction
        - offerTransactionId
    MerchantParticipations:
      title: MerchantParticipations
      type: array
      minItems: 1
      maxItems: 30
      description: List of merchant participation reference objects.
      items:
        $ref: '#/components/schemas/MerchantParticipation'
    MerchantSearchParameters:
      title: MerchantSearchParameters
      type: object
      description: >-
        Parameters to search merchant objects. At least one parameter is
        required in the request.
      properties:
        merchantLegalName:
          $ref: '#/components/schemas/merchantLegalName'
        acquirerICA:
          $ref: '#/components/schemas/acquirerICA'
        merchantParticipationStatus:
          $ref: '#/components/schemas/merchantParticipationStatus'
        countryCode:
          $ref: '#/components/schemas/countryCode'
        maid:
          $ref: '#/components/schemas/maid'
    MerchantMidSearchParameters:
      title: MerchantMidSearchParameters
      type: object
      description: Parameters to search mid for a given merchant.
      required:
        - merchantLegalName
        - countryCode
        - acquirerICA
      properties:
        merchantLegalName:
          $ref: '#/components/schemas/merchantLegalName'
        countryCode:
          $ref: '#/components/schemas/countryCode'
        acquirerICA:
          $ref: '#/components/schemas/acquirerICA'
        mid:
          $ref: '#/components/schemas/mid'
        status:
          $ref: '#/components/schemas/status'
    MerchantParticipation:
      title: MerchantParticipation
      type: object
      description: Merchant participation reference
      required:
        - merchantLegalName
        - countryCode
        - acquirerICA
      properties:
        merchantLegalName:
          $ref: '#/components/schemas/merchantLegalName'
        merchantGroup:
          $ref: '#/components/schemas/merchantGroup'
        countryCode:
          $ref: '#/components/schemas/countryCode'
        acquirerICA:
          $ref: '#/components/schemas/acquirerICA'
        dbaNames:
          $ref: '#/components/schemas/dbaNames'
        mids:
          $ref: '#/components/schemas/mids'
        maid:
          $ref: '#/components/schemas/maid'
        maidType:
          $ref: '#/components/schemas/maidType'
        nonMerchantNegotiatedParticipation:
          $ref: '#/components/schemas/nonMerchantNegotiatedParticipation'
        optIn:
          $ref: '#/components/schemas/optIn'
        duns:
          $ref: '#/components/schemas/duns'
        websiteUrl:
          $ref: '#/components/schemas/websiteUrl'
        wallets:
          $ref: '#/components/schemas/wallets'
        address:
          $ref: '#/components/schemas/Address'
    MidDetailsPage:
      title: MidDetailsPage
      type: object
      description: Contains mids of a merchant.
      required:
        - merchantLegalName
        - acquirerICA
        - countryCode
        - optIn
        - mids
      properties:
        merchantLegalName:
          $ref: '#/components/schemas/merchantLegalName'
        merchantGroup:
          $ref: '#/components/schemas/merchantGroup'
        acquirerICA:
          $ref: '#/components/schemas/acquirerICA'
        countryCode:
          $ref: '#/components/schemas/countryCode'
        nonMerchantNegotiatedParticipation:
          $ref: '#/components/schemas/nonMerchantNegotiatedParticipation'
        optIn:
          $ref: '#/components/schemas/optIn'
        mids:
          $ref: '#/components/schemas/MidDetails'
    MidDetails:
      type: array
      minItems: 1
      maxItems: 1000
      description: >-
        API will return a list of wallet name, wallet acceptance, and wallet
        merchant id.
      items:
        $ref: '#/components/schemas/MidDetail'
    MidDetail:
      type: object
      description: Contains mid with status.
      required:
        - mid
        - status
      properties:
        mid:
          $ref: '#/components/schemas/mid'
        status:
          $ref: '#/components/schemas/status'
        errorReason:
          $ref: '#/components/schemas/errorReason'
    MerchantSearches:
      type: array
      minItems: 1
      maxItems: 100
      description: List of Merchant objects
      items:
        $ref: '#/components/schemas/MerchantSearch'
    MerchantSearch:
      title: Merchant
      type: object
      description: Merchant object
      properties:
        merchantLegalName:
          $ref: '#/components/schemas/merchantLegalName'
        countryCode:
          $ref: '#/components/schemas/countryCode'
        acquirerICA:
          $ref: '#/components/schemas/acquirerICA'
        submitterICA:
          $ref: '#/components/schemas/submitterICA'
        dbaNames:
          $ref: '#/components/schemas/dbaNames'
        maids:
          $ref: '#/components/schemas/maids'
        maidType:
          $ref: '#/components/schemas/searchMaidType'
        nonMerchantNegotiatedParticipation:
          $ref: '#/components/schemas/nonMerchantNegotiatedParticipation'
        optIn:
          $ref: '#/components/schemas/optIn'
        status:
          $ref: '#/components/schemas/status'
        duns:
          $ref: '#/components/schemas/duns'
        websiteUrl:
          $ref: '#/components/schemas/websiteUrl'
        wallets:
          $ref: '#/components/schemas/wallets'
        errorReason:
          $ref: '#/components/schemas/errorReason'
        address:
          $ref: '#/components/schemas/Address'
        merchantGroup:
          $ref: '#/components/schemas/merchantGroup'
    Merchants:
      type: array
      minItems: 1
      maxItems: 100
      description: List of Merchant objects
      items:
        $ref: '#/components/schemas/Merchant'
    Merchant:
      title: Merchant
      type: object
      description: Merchant object
      properties:
        merchantLegalName:
          $ref: '#/components/schemas/merchantLegalName'
        merchantGroup:
          $ref: '#/components/schemas/merchantGroup'
        countryCode:
          $ref: '#/components/schemas/countryCode'
        acquirerICA:
          $ref: '#/components/schemas/acquirerICA'
        submitterICA:
          $ref: '#/components/schemas/submitterICA'
        dbaNames:
          $ref: '#/components/schemas/dbaNames'
        maids:
          $ref: '#/components/schemas/maids'
        maidType:
          $ref: '#/components/schemas/searchMaidType'
        acceptorIds:
          $ref: '#/components/schemas/acceptorIds'
        nonMerchantNegotiatedParticipation:
          $ref: '#/components/schemas/nonMerchantNegotiatedParticipation'
        optIn:
          $ref: '#/components/schemas/optIn'
        status:
          $ref: '#/components/schemas/status'
        errorReason:
          $ref: '#/components/schemas/errorReason'
        duns:
          $ref: '#/components/schemas/duns'
        websiteUrl:
          $ref: '#/components/schemas/websiteUrl'
        wallets:
          $ref: '#/components/schemas/wallets'
        address:
          $ref: '#/components/schemas/Address'
        requestEndpoint:
          $ref: '#/components/schemas/requestEndpoint'
        requestId:
          $ref: '#/components/schemas/requestId'
        httpErrorStatusCode:
          $ref: '#/components/schemas/httpErrorStatusCode'
        errors:
          $ref: '#/components/schemas/errors'
    Address:
      title: Address
      type: object
      description: The address of the merchant.
      properties:
        addressLine1:
          type: string
          minLength: 1
          maxLength: 300
          description: Legally registered address of the merchant
          example: 600 WEST
        addressLine2:
          type: string
          minLength: 1
          maxLength: 300
          description: Second address for the merchant
          example: SECTOR 5
        addressLine3:
          type: string
          minLength: 1
          maxLength: 300
          description: Third address line
          example: SUITE 775
        city:
          type: string
          minLength: 1
          maxLength: 30
          description: >-
            Legally registered address city. The City field is mandatory when
            adding a merchant but not when updating a merchant.
          example: St Peters
        state:
          type: string
          minLength: 2
          maxLength: 3
          description: >-
            Legally registered address state or province. Refer to
            (https://www.iso.org/obp/ui/#search) for ISO 3166-2 code values.
          example: QLD
        postalCode:
          type: string
          minLength: 1
          maxLength: 20
          description: >-
            Legally registered address postal code. Provide a postal code to
            submit MID-based merchants via API if the country has a postal code.
          example: 85001
    wallet:
      title: wallet
      type: object
      description: Contains merchant wallet information.
      required:
        - walletId
        - walletAcceptance
      properties:
        walletId:
          $ref: '#/components/schemas/walletId'
        walletAcceptance:
          $ref: '#/components/schemas/walletAcceptance'
        walletMerchantId:
          $ref: '#/components/schemas/walletMerchantId'
    merchantLegalName:
      type: string
      minLength: 1
      maxLength: 300
      description: Legally registered name of the merchant.
      pattern: ^.{1,300}
      example: Wallmart
    countryCode:
      type: string
      minLength: 3
      maxLength: 3
      pattern: ^[A-Za-z]{3}$
      description: >-
        Legally registered country code of merchant. Refer to
        (https://www.iso.org/obp/ui/#search) for ISO 3166 alpha 3 code values.
      example: USA
    merchantParticipationStatus:
      type: string
      minLength: 1
      maxLength: 10
      pattern: ^(?:PENDING|COMPLETED|ERROR)$
      description: Status of request
      example: COMPLETED
    acquirerICA:
      type: string
      pattern: ^(?:[0-9]{6}|[0-9]{9}|[0-9]{11})$
      description: >-
        ICA of acquirer which will be part of auth transaction. Insert leading
        zeros to ensure that the acquirerICA is either 6, 9, or 11 characters in
        length.
      example: '00689425761'
    submitterICA:
      type: string
      pattern: ^(?!,)(( \| )?(?:[\d]{6}|[\d]{9}|[\d]{11})\b)*$
      description: >-
        ICA(s) of partner(s) institution(s) who submitted this merchant
        participation.
      example: '14689425761'
    requestEndpoint:
      type: string
      minLength: 25
      maxLength: 25
      description: original request endpoint
      example: /merchants/participations
    requestId:
      type: integer
      format: int64
      minimum: 0
      maximum: 9223372036854776000
      description: >-
        The request ID is obtained by calling POST /merchants/participations
        API.
      example: 7223372036854776000
    httpErrorStatusCode:
      type: integer
      minimum: 400
      maximum: 599
      description: HTTP error code of original POST /merchants/participations API.
      example: 400
    dbaNames:
      type: array
      minItems: 1
      maxItems: 1000
      items:
        $ref: '#/components/schemas/dbaName'
    dbaName:
      type: string
      minLength: 1
      maxLength: 256
      description: >-
        Trade name used by merchant to conduct business and is known to the
        consumer.
      example: ACME
    maid:
      type: string
      pattern: ^[A-Za-z0-9]{1,6}
      description: >-
        Mastercard Assigned ID (MAID) as specified in Customer Interface
        Specification for ISO data element DE48 SE32.
      example: '321765'
    maids:
      type: array
      minItems: 1
      maxItems: 2
      description: >-
        Mastercard Assigned ID (MAID). Adding a MAID based merchant object
        requires the mandatory provision of `maids`, while updating a merchant
        does not necessitate it.
      items:
        $ref: '#/components/schemas/maid'
    maidType:
      type: string
      description: >-
        Flag to identify provided MAID type. This is mandatory for participation
        requests with MAID.
      enum:
        - GRP
        - EXT
      example: GRP
    searchMaidType:
      title: maidType
      type: string
      description: >-
        Flag to identify provided MAID type. This is mandatory for participation
        requests with MAID.
      example: EXT
    mids:
      type: array
      minItems: 1
      maxItems: 5000
      description: Merchant IDs assigned by the acquirer.
      items:
        $ref: '#/components/schemas/mid'
    wallets:
      title: wallets
      type: array
      minItems: 1
      maxItems: 3
      description: Merchant wallets.
      items:
        $ref: '#/components/schemas/wallet'
    acceptorIds:
      type: array
      minItems: 1
      description: MAID IDs assigned by Mastercard.
      items:
        $ref: '#/components/schemas/acceptorId'
      deprecated: true
    mid:
      type: string
      pattern: ^[A-Za-z0-9]{1,15}
      description: Merchant ID assigned by the acquirer.
      example: '235157567121214'
    acceptorId:
      type: string
      maxLength: 20
      description: Mastercard assigned ID.
      example: '531567'
    websiteUrl:
      type: string
      minLength: 1
      maxLength: 100
      pattern: ^(https?|ftp|file)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]
      description: The URL of the merchant website.
      example: https://www.acme-company.com
    nonMerchantNegotiatedParticipation:
      type: string
      maxLength: 1
      minLength: 1
      pattern: ^(?:Y|N)$
      description: >-
        Merchant opt-in or opt-out preference for non-merchant negotiated
        product codes, such as, SPP, SPS, SBJ, and SBK.
      example: 'Y'
      deprecated: true
    optIn:
      type: string
      maxLength: 1
      minLength: 1
      pattern: ^(?:Y|N)$
      description: >-
        Merchant opt-in or opt-out preference for non-merchant negotiated
        product codes, such as, SPP, SPS, SBJ, and SBK or GCS.
      example: 'Y'
    merchantGroup:
      type: string
      pattern: ^[A-Z0-9]{1,2}$
      description: >-
        Merchant Group. An identifier used to determine the merchant category
        type to qualify for the right MAID (MAID is assigned internally by
        Mastercard). It is imperative for a country such as Australia, For
        others it is optional.
      example: A1
    walletId:
      type: integer
      minimum: 1
      maximum: 3
      description: >-
        Indicates the wallet, 1 for ApplePay, 2 for GooglePay, and 3 for
        SamsungPay.
      example: 1
    walletAcceptance:
      type: string
      maxLength: 1
      minLength: 1
      pattern: ^(?:Y|N)$
      description: States whether the merchant accepts the wallet or not.
      example: 'Y'
    walletMerchantId:
      type: string
      minLength: 1
      maxLength: 300
      description: One or more wallet merchant IDs separated by the pipe symbol.
      example: 235346356234 | 125346356236 | 125446356237
    status:
      type: string
      minLength: 1
      maxLength: 10
      pattern: ^(?:PENDING|COMPLETED|ERROR)$
      description: Status of request
      example: COMPLETED
    errorReason:
      type: string
      minLength: 1
      maxLength: 30
      pattern: ^(?:INVALID_ACQUIRER_ICA|UNKNOWN)$
      description: Reason for error.
      example: INVALID_ACQUIRER_ICA
    duns:
      type: string
      minLength: 1
      maxLength: 9
      description: >-
        A unique identifier assigned by Dun and Bradstreet is used to identify a
        business.
      example: '879847426'
    count:
      type: integer
      description: The number of items in this batch (the size of the item array).
      example: 2
    offset:
      description: >-
        The number of items you asked for at the start of the list to be offset
        from.
      type: integer
      example: 1
    limit:
      description: The number of items you asked the list to be limited to.
      type: integer
      example: 2
    total:
      description: The total number of items in the collection.
      type: integer
      example: 5
    errors:
      title: errors
      type: array
      minItems: 1
      description: Error object which contains a list of error objects.
      required:
        - error
      items:
        $ref: '#/components/schemas/Error'
    PlanApprovalParameters:
      type: object
      required:
        - planId
        - status
      properties:
        planId:
          description: A unique identifier assigned to an installment plan.
          type: string
          format: uuid
          example: 3d56f5a7-db48-41f0-875e-30920e8465f3
        status:
          type: string
          description: Plan approval status. It will be either APPROVED or DECLINED.
          enum:
            - APPROVED
            - DECLINED
          example: APPROVED
        offerId:
          description: >
            Installment Program Provider's offer identifier generated by
            Mastercard. This ID is generated at the time of setup on MC Connect
            UI when the Lender creates an Offer.


            The lender must provide the offer ID if the consumer offer selection
            is disabled. The offer ID provided must be one of the offer IDs
            retrieved via Plan API.
          type: string
          format: string
          minLength: 8
          maxLength: 8
          example: '24092019'
        rejectReasonCode:
          type: string
          description: >-
            Describes the reason for plan rejection. Mandatory for when the
            status is DECLINED.
          enum:
            - CONSUMER_AUTH_FAIL
            - CONSUMER_APPLICATION_FAIL
            - CONSUMER_CANCELLATION
            - LENDER_DRIVEN_REJECTION
            - LENDER_SYSTEM_ERROR
            - OTHER_REASON
          example: CONSUMER_APPLICATION_FAIL
        rejectReasonDetail:
          type: string
          description: Indicates detailed information about the reason for rejection.
          minLength: 0
          maxLength: 5000
          example: No credit or credit score too low
        approvedAmount:
          description: >-
            The total approved amount owed by the consumer on an installment
            purchase, inclusive of fees and interest, for the installment plan.
            This field is required if the status is APPROVED.
          type: number
          format: double
          example: 300
          minimum: 0
          maximum: 999999999999999
        approvedCurrency:
          description: >-
            Alphanumeric currency code as per ISO 4217. This field is required
            if the status is APPROVED.
          type: string
          minLength: 3
          maxLength: 3
          example: USD
        paymentAuthorization:
          description: This block is required in the event that the status is APPROVED.
          type: object
          required:
            - primaryAccountNumber
            - panExpirationMonth
            - panExpirationYear
            - cardSecurityCode
            - billingAddress
          properties:
            primaryAccountNumber:
              type: string
              minLength: 9
              maxLength: 19
              description: >
                Primary Account Number. A variable length, ISO/IEC
                7812-compliant account number is generated within account ranges
                associated with a BIN, by a Card Issuer.
              example: '5555111122223333'
            panExpirationMonth:
              type: string
              minLength: 2
              maxLength: 2
              description: >-
                The expiration month of the card, expressed as a two-digit
                calendar month.
              example: '08'
            panExpirationYear:
              type: string
              minLength: 4
              maxLength: 4
              description: >-
                The expiration year of the Card, expressed as a four-digit
                calendar year.
              example: '2022'
            cardSecurityCode:
              type: string
              minLength: 3
              maxLength: 4
              description: Card security code
              example: '123'
            cardholderFullName:
              type: string
              maxLength: 60
              description: >-
                Cardholders Name. This field is optional if cardholderFirstName
                and cardholderLastName are used.
              example: John Doe
            cardholderFirstName:
              type: string
              maxLength: 30
              description: >-
                Cardholders First Name. This field is optional if
                cardholderFullName is used.
              example: John
            cardholderLastName:
              type: string
              maxLength: 30
              description: >-
                Cardholders Last Name. This field is optional if
                cardholderFullName is used.
              example: Doe
            billingAddress:
              type: object
              required:
                - line1
                - city
                - state
                - countryCode
                - zip
              description: Cardholders Billing Address.
              properties:
                line1:
                  type: string
                  maxLength: 60
                  description: Address line 1
                  example: 5 Street Drive
                line2:
                  type: string
                  maxLength: 75
                  description: Address line 2
                  example: Apartment 123
                line3:
                  type: string
                  maxLength: 75
                  description: Address line 3
                  example: Southampton
                city:
                  type: string
                  maxLength: 50
                  description: City of residence
                  example: O'Fallon
                state:
                  type: string
                  maxLength: 30
                  description: State of Residence
                  example: MO
                countryCode:
                  description: Address country code in ISO 3166 alpha 2 format.
                  type: string
                  minLength: 2
                  maxLength: 2
                  pattern: ^[a-zA-Z]{2}$
                  example: US
                zip:
                  description: Address zip/postal code
                  type: string
                  maxLength: 16
                  example: '123456'
    Amount:
      type: number
      format: double
      description: Amount to be paid in an installment.
      example: 100
      exclusiveMaximum: false
      exclusiveMinimum: false
      maximum: 9999999999999.99
      minimum: 0
    PSPData:
      type: object
      properties:
        callbackUrl:
          description: >-
            PSP (Payment service provider) callback URL with checkout response.
            This URL will expire after 24 hours from the time the approval is
            posted.
          type: string
          example: >-
            https://src.mastercard.com#%7B%22action%22%3A%22COMPLETED%22%2C%22checkoutResponse%22%3AEncryptedData%7D
    CompletionPSPData:
      allOf:
        - $ref: '#/components/schemas/PSPData'
        - type: object
          required:
            - status
          properties:
            status:
              description: >-
                Indicates the status of processing. It will be either
                IN_PROGRESS or COMPLETED.
              type: string
              example: IN_PROGRESS
    Consumer:
      type: object
      properties:
        email:
          type: string
          description: >-
            Consumer's email address. Hashed for pre-approved consumer, raw for
            consumer without pre-approval.
          example: jane.doe@example.com
          maxLength: 254
          minLength: 5
        isdCode:
          type: string
          description: ISD code of the consumer's mobile number.
          example: '1'
          maxLength: 5
          minLength: 1
        mobile:
          type: string
          description: >-
            Consumer's mobile number. Hashed for pre-approved consumer, raw for
            consumer without pre-approval.
          example: '5550009999'
          maxLength: 64
          minLength: 4
        providerConsumerId:
          type: string
          format: uuid
          description: >-
            Unique user ID provided by the Installment Program Provider. This is
            specific to the provider. (External user/consumer id). Applicable
            only for pre-approved consumers.
          example: 3d56f5a7-db48-41f0-875e-30920e8465f3
          maxLength: 36
          minLength: 36
    InstallmentPlan:
      type: object
      properties:
        consumer:
          $ref: '#/components/schemas/Consumer'
        merchant:
          $ref: '#/components/schemas/MerchantPlan'
        offerId:
          $ref: '#/components/schemas/OfferIdField'
        planId:
          $ref: '#/components/schemas/PlanIdField'
        planInstallmentInformation:
          $ref: '#/components/schemas/PlanInstallmentInformation'
        providerId:
          $ref: '#/components/schemas/ProviderIdField'
        rejectReasonCode:
          type: string
          description: >-
            Describes the reason for plan rejection. Mandatory for when status
            is DECLINED. Following are the reject reason codes:[
            CONSUMER_AUTH_FAIL, CONSUMER_APPLICATION_FAIL,
            CONSUMER_CANCELLATION, LENDER_DRIVEN_REJECTION, LENDER_SYSTEM_ERROR,
            OTHER_REASON ]
          example: CONSUMER_CANCELLATION
          maxLength: 30
          minLength: 12
        rejectReasonDetail:
          type: string
          description: Indicates detailed information about reject reason.
          example: Credit score is too low
          maxLength: 5000
          minLength: 0
        scheduledRepayments:
          $ref: '#/components/schemas/ScheduledRepayments'
        status:
          $ref: '#/components/schemas/StatusField'
        transaction:
          $ref: '#/components/schemas/Transaction'
        transactionOffers:
          $ref: '#/components/schemas/TransactionOffers'
      required:
        - merchant
        - planId
        - providerId
        - status
        - transaction
    MerchantPlan:
      type: object
      properties:
        acceptor:
          type: string
          description: Merchant acceptor identifier.
          example: '100234'
          maxLength: 100
          minLength: 1
        country:
          type: string
          description: Country code in ISO 3166 alpha 3 format.
          example: USA
          maxLength: 3
          minLength: 3
        mcc:
          type: string
          description: Merchant Category Code.
          example: '1711'
          maxLength: 4
          minLength: 4
        name:
          type: string
          description: Merchant name for plan.
          example: Decor shop
          maxLength: 100
          minLength: 1
      required:
        - country
        - mcc
    OfferIdField:
      type: string
      description: >-
        Unique identifier for installment offers. This is mandatory for
        'Mastercard Installments Payment Services product.
      example: '24092019'
      maxLength: 64
      minLength: 8
    PlanIdField:
      type: string
      format: uuid
      description: A unique identifier assigned to an installment plan.
      example: 3d56f5a7-db48-41f0-875e-30920e8465f3
      maxLength: 36
      minLength: 36
    PlanInstallmentInformation:
      type: object
      description: >-
        This object is mandatory for **Mastercard Installments Payment
        Services**.
      properties:
        apr:
          type: number
          format: double
          description: Annual Percentage Rate (APR).
          example: 25.03
          exclusiveMaximum: false
          exclusiveMinimum: false
          maximum: 200
          minimum: 0
        currency:
          type: string
          description: Currency code according to ISO 4217.
          example: USD
          maxLength: 3
          minLength: 3
        frequency:
          type: string
          description: >-
            Frequency of installment (single installment time duration).It will
            be one of the [WEEKLY, BIWEEKLY, MONTHLY]
          example: BIWEEKLY
          maxLength: 20
          minLength: 3
        firstInstallmentAmount:
          type: number
          format: double
          description: Amount to be paid for the first installment.
          example: 100
          exclusiveMaximum: false
          exclusiveMinimum: false
          maximum: 1000000000000000
          minimum: 0
        otherInstallmentAmount:
          type: number
          format: double
          description: Subsequent Installment amount with minor unit according to ISO 4217.
          example: 200
          maximum: 1000000000000000
          minimum: 0
        feeValue:
          type: number
          format: double
          description: >-
            Fees values based on type it can be either Fixed amount or
            Percentage to applied in transaction amount.
          example: 2.05
          exclusiveMaximum: false
          exclusiveMinimum: false
          maximum: 1000000000000000
          minimum: 0
        tenure:
          type: integer
          format: int32
          description: Total number of installments for an offer. Offer tenure.
          example: 2
          maximum: 99
          minimum: 2
        totalAmount:
          type: number
          format: double
          description: >-
            The total amount owed by the cardholder on an installment purchase
            inclusive of fees, tax and interest for the installment plan.
          example: 200
          exclusiveMaximum: false
          exclusiveMinimum: false
          maximum: 1000000000000000
          minimum: 0
      required:
        - frequency
        - tenure
    ProviderIdField:
      type: string
      format: uuid
      description: Provider ID is internal ID generated by Configuration API.
      example: 3d56f5a7-db48-41f0-875e-30920e8465f3
      maxLength: 36
      minLength: 36
    ScheduledRepayment:
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        dueDate:
          type: string
          description: Due date for an installment.
          example: 2022-5-21
          maxLength: 10
          minLength: 8
        installmentNumber:
          type: integer
          format: int32
          description: Number of an installment.
          example: 1
          maximum: 99
          minimum: 1
    ScheduledRepayments:
      type: array
      description: >-
        This object will be populated only when consumer offer selection is
        enabled.
      items:
        $ref: '#/components/schemas/ScheduledRepayment'
      maxItems: 99
    StatusField:
      type: string
      description: >-
        Current status of a plan. One of: CREATED, APPROVED, DECLINED,
        TIMED_OUT.
      example: CREATED
      maxLength: 12
      minLength: 7
    Transaction:
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        currency:
          type: string
          description: Currency code according to ISO 4217.
          example: USD
          maxLength: 3
          minLength: 3
      required:
        - amount
        - currency
    TransactionOffer:
      type: object
      properties:
        offerId:
          type: string
          description: unique identifier for installment offers.
          example: '24092019'
          maxLength: 64
          minLength: 8
      required:
        - offerId
    TransactionOffers:
      type: array
      description: >-
        A list of offers presented to the consumer. This is a mandatory field
        for During Purchase use case of Mastercard Installments Payment
        Services.
      items:
        $ref: '#/components/schemas/TransactionOffer'
      maxItems: 50
    OfferTransactionIdField:
      type: string
      description: >-
        Unique identifier for installment offers presentment transaction. It
        will be snowflake identifier format.
      example: '1763137029152964608'
      minLength: 8
      maxLength: 40
  examples:
    PanRegistrationWithEncryptedValueAndAccountRangeRequest:
      description: >-
        Typical registration request for showing indicative payload after
        performing JWE encryption on sensitiveData' field and assigning to
        encryptedValue field.
      value:
        panListName: Christmas Offers panList 135
        accountRange:
          accountRangeLow: '5110920004100000000'
          accountRangeHigh: '5110920004199999999'
        encryptedValue: eyJraWQiOiI3NjFiMDAzYzFlYWRlM(...).Y+oPYKZEMTKyYcSIVEgtQw
    PanRegistrationWithEncryptedValueRequest:
      description: >-
        Request showing creation of a new pan list with only name of the list
        and list of PANs without account range specification. Since account
        range isn't present, PANs will be validated against the first valid
        account range found for the pans provided. Please note that the client
        needs to encrypt sensitiveData field using Mastercard provided JWE
        encryption libraries and populate encryptedValue field before calling
        the API. Refer to the example, PAN Registration with PAN and Account
        Range (Only for reference), to understand how the resulting payload
        should look like after performing encryption.
      value:
        panListName: Christmas Offers panList 135
        sensitiveData:
          pans:
            - pan: '5110923494472279'
            - pan: '5110922275884793'
    PanRegistrationWithAccountRangeRequest:
      description: >-
        Registration request to create pan list only with account range. The new
        pan list will not have any pans linked to it. In this case panListName,
        accountRange are required in the request.
      value:
        panListName: Christmas Offers panList 135
        accountRange:
          accountRangeLow: '5110920004100000000'
          accountRangeHigh: '5110920004199999999'
    ExistingPanListIdRegistrationRequest:
      description: >-
        Request showing how to update an existing PAN list to add more PANs.
        Since the pans are getting added to the already existing pan list, pans
        will be validated against the account range associated to the existing
        pan list. Please note that the client needs to encrypt sensitiveData
        field using Mastercard provided JWE encryption libraries and populate
        sensitiveData field before calling the API. Refer to the example, PAN
        Registration with PAN and Account Range (Only for reference), to
        understand how the resulting payload should look like after performing
        encryption.
      value:
        panListId: '282575947176083456'
        sensitiveData:
          pans:
            - pan: '5110923494472279'
            - pan: '5110922275884793'
    UnencryptedPanRegistrationWithBothPanAndAccountRangeRequest:
      description: >-
        Registration request showing creation of a new pan list by specifying
        name of PAN list, account range and list of PANs. Please note that the
        client needs to encrypt sensitiveData field using Mastercard provided
        JWE encryption libraries and populate encryptedValue field before
        calling the API. Refer to the example, PAN Registration with PAN and
        Account Range (Only for reference), to understand how the resulting
        payload should look like after performing encryption.
      value:
        panListName: Christmas Offers PanList 135
        sensitiveData:
          pans:
            - pan: '5110923494472279'
            - pan: '5110922275884793'
        accountRange:
          accountRangeLow: '5110920004100000000'
          accountRangeHigh: '5110920004199999999'
    SuccessPanListWithPansRegistration:
      description: >-
        Registration response with pan list information and all pans
        successfully registered. Counts fields showcase the number of pans
        processed successfully and unsuccessfully. In case of the full success
        response successfulCount will have the count of successful pans and
        failureCount will have '0'. Since there are no failed PANs, the
        encryptedValue parameter will not be present.
      value:
        successfulCount: '2'
        failureCount: '0'
        panList:
          panListId: '28236583293000499'
          panListName: Christmas Offers PanList 135
        accountRange:
          cid: '242666'
          ica: '19246'
          country: USA
          accountRangeLow: '5110920004100000000'
          accountRangeHigh: '5110920004199999999'
    PartialSuccessPansRegistration:
      description: >-
        Registration response with pan list created/updated and encryptedValue
        (encrypted sensitiveData object) to review registered pans. Counts
        fields showcase the number of pans processed successfully and
        unsuccessfully. In case of the partial success response both
        successfulCount and failureCount will have the corresponding counts of
        the pans whether they are successful or failed. The encryptedValue will
        have the (encrypted sensitiveData object) with the corresponding error
        details like reasonCode and description.
      value:
        successfulCount: '1'
        failureCount: '1'
        panList:
          panListId: '230417253818957824'
          panListName: Christmas Offers PanList 135
        accountRange:
          cid: '242666'
          ica: '19246'
          country: USA
          accountRangeLow: '5110920004100000000'
          accountRangeHigh: '5110920004199999999'
        encryptedValue: eyJraWQiOiI3NjFiMDAzYzFlYWRlM(...).Y+oPYKZEMTKyYcSIVEgtQw
    SuccessEmptyPanListRegistration:
      description: >-
        Registration response with pan list created only. Counts fields showcase
        the number of pans processed successfully and unsuccessfully. In case of
        the success empty pan list response both successfulCount, failureCount
        will have '0'. Since there are not failed pans the encryptedValue will
        not be present.
      value:
        successfulCount: '0'
        failureCount: '0'
        panList:
          panListId: '230417253818957824'
          panListName: Christmas Offers PanList 135
        accountRange:
          cid: '242666'
          ica: '19246'
          country: USA
          accountRangeLow: '5110920004100000000'
          accountRangeHigh: '5110920004199999999'
    FailurePanListRegistration:
      description: >-
        Registration response without pan list created and encryptedValue
        (encrypted sensitiveData object) to review unregistered pans. Counts
        fields showcase the number of pans processed successfully and
        unsuccessfully. In case of the pan list registration failure in creating
        the pan list response object, successfulCount will be '0' and 
        failureCount will have the count of the failure pans. The encryptedValue
        will have the (encrypted sensitiveData object) with the corresponding
        error details like reasonCode and description.
      value:
        successfulCount: '0'
        failureCount: '1'
        encryptedValue: eyJraWQiOiI3NjFiMDAzYzFlYWRlM(...).Y+oPYKZEMTKyYcSIVEgtQw
    FullFailurePansRegistration:
      description: >-
        Registration response with pan list information and encryptedValue
        (encrypted sensitiveData object) to review unregistered pans. Counts
        fields showcase the number of pans processed successfully and
        unsuccessfully. In case of the pan list registration failure response
        object, successfulCount will be '0' and  failureCount will have the
        count of the failure pans. The encryptedValue will have the (encrypted
        sensitiveData object) with the corresponding error details like
        reasonCode and description.
      value:
        successfulCount: '0'
        failureCount: '1'
        panList:
          panListId: '230417253818957824'
          panListName: Christmas Offers PanList 135
        accountRange:
          cid: '242666'
          ica: '19246'
          country: USA
          accountRangeLow: '5110920004100000000'
          accountRangeHigh: '5110920004199999999'
        encryptedValue: eyJraWQiOiI3NjFiMDAzYzFlYWRlM(...).Y+oPYKZEMTKyYcSIVEgtQw
    UnencryptedPartialSuccessPanRegistration:
      description: >-
        This Unencrypted registration response with pans object containing list
        of pans error details is just for reference . Counts fields showcase the
        number of pans processed successfully and unsuccessfully.
      value:
        successfulCount: '2'
        failureCount: '4'
        panList:
          panListId: '282365832930004992'
          panListName: Christmas Offers PanList 135
        accountRange:
          cid: '242666'
          ica: '19246'
          country: USA
          accountRangeLow: '5110920004100000000'
          accountRangeHigh: '5110920004199999999'
        sensitiveData:
          pans:
            - pan: '5110923494472279'
              error:
                reasonCode: Invalid.pan
                description: pan already present in list
            - pan: '5110923494472278'
              error:
                reasonCode: Invalid.pan
                description: pan failed for Luhn check
            - pan: '23037'
              error:
                reasonCode: Invalid.pan
                description: pan doesn't have required 11-19 digits
            - pan: '5555552292032404'
              error:
                reasonCode: Invalid.pan
                description: pan failed for account range validation
    BadRequestPanListNameValidationError:
      description: Error when pan list name is not present in registration request.
      value:
        Errors:
          Error:
            - Source: mci-installments-consumer-api
              ReasonCode: 'invalid.data: panListName'
              Description: must not be null or empty
              Recoverable: false
              Details: ''
    BadRequestPansNotPresentUpdateRequestValidationError:
      description: >-
        Error when encryptedValue (pans) object is not present or empty in
        update request.
      value:
        Errors:
          Error:
            - Source: mci-installments-consumer-api
              ReasonCode: invalid.pan
              Description: To update pan list at least one pan should be present
              Recoverable: false
              Details: ''
    BadRequestPanListNameRegexValidationError:
      description: Error when provided pan list name doesn't align with regex.
      value:
        Errors:
          Error:
            - Source: mci-installments-consumer-api
              ReasonCode: 'invalid.data: panListName'
              Description: must match "^[a-zA-Z0-9\s-]{1,64}$"
              Recoverable: false
              Details: ''
    BadRequestPanListIdRegexValidationError:
      description: Error when pan list id does not align with regex.
      value:
        Errors:
          Error:
            - Source: mci-installments-consumer-api
              ReasonCode: 'invalid.data: panListId'
              Description: must match "^[0-9]{18}$"
              Recoverable: false
              Details: ''
    BadRequestPanListIdNullValidationError:
      description: Error when pan list id is not present in request.
      value:
        Errors:
          Error:
            - Source: mci-installments-consumer-api
              ReasonCode: 'invalid.data: panListId'
              Description: must not be null
              Recoverable: false
              Details: ''
    BadRequestInvalidEncryptedValueOrAccountRangesValidationError:
      description: >-
        Error when registration request doesn't have accountRange nor
        encryptedValue.
      value:
        Errors:
          Error:
            - Source: mci-installments-consumer-api
              ReasonCode: 'invalid.data: Either encryptedValue or Account Range'
              Description: must not be null or empty
              Recoverable: false
              Details: ''
    BadRequestInvalidEncryptedValueValidationError:
      description: Error when encryptedValue is is not provided / null.
      value:
        Errors:
          Error:
            - Source: mci-installments-consumer-api
              ReasonCode: 'invalid.data: encryptedValue'
              Description: must not be null or empty
              Recoverable: false
              Details: ''
    BadRequestInvalidAccountRangeRegexValidationError:
      description: Error when accountRange properties don't align with regex.
      value:
        Errors:
          Error:
            - Source: mci-installments-consumer-api
              ReasonCode: 'invalid.data: accountRange.accountRangeLow'
              Description: must match "^[0-9]{11,19}$"
              Recoverable: false
              Details: ''
            - Source: mci-installments-consumer-api
              ReasonCode: 'invalid.data: accountRange.accountRangeHigh'
              Description: must match "^[0-9]{11,19}$"
              Recoverable: false
              Details: ''
    BadRequestInvalidAccountRangeForExistingPanListValidationError:
      description: >-
        Error when provided accountRange doesn't match with the one of the
        existing list. This response applies for existing pan list only.
      value:
        Errors:
          Error:
            - Source: mci-installments-consumer-api
              ReasonCode: invalid.accountRange
              Description: Invalid account range for pan list
              Recoverable: false
              Details: ''
    BadRequestInvalidAccountRangeForNewPanListValidationError:
      description: >-
        Error when provided accountRange is not present in the system. This
        response applies for new pan list only.
      value:
        Errors:
          Error:
            - Source: mci-installments-consumer-api
              ReasonCode: invalid.accountRange
              Description: Account range not valid
              Recoverable: false
              Details: ''
    BadRequestPanListIdNotFoundValidationError:
      description: Error when provided pan list id is not present in the system.
      value:
        Errors:
          Error:
            - Source: mci-installments-consumer-api
              ReasonCode: invalid.request.parameter
              Description: Pan list not found for id 289152609766342651
              Recoverable: false
              Details: ''
    PanDeregistrationRequest:
      description: >-
        Typical deregistration request for showing indicative payload after
        performing JWE encryption on sensitiveData field and assigning to
        encryptedValue field.
      value:
        panListId: '230417253818957824'
        encryptedValue: eyJraWQiOiI3NjFiMDAzYzFlYWRlM(...).Y+oPYKZEMTKyYcSIVEgtQw
    UnencryptedPanDeregistrationRequest:
      description: >-
        Request showing how to remove two PANs from an existing PAN List. Please
        note that the client needs to encrypt sensitiveData field using
        Mastercard provided JWE encryption libraries and populate
        encryptedValue field before calling the API. Refer to the example,
        PAN Registration with PAN and Account Range (Only for reference), to
        understand how the resulting payload should look like after performing
        encryption
      value:
        panListId: '230417253818957824'
        sensitiveData:
          pans:
            - pan: '5110923494472279'
            - pan: '5110922275884793'
    PartialSuccessPanDeregistrationResponse:
      description: >-
        Response body of a partial success deregistration. Counts fields
        showcase the number of pans processed successfully and unsuccessfully.
        In case of the partial success response both successfulCount and
        failureCount will have the corresponding counts of the pans whether they
        are successful or failed. The encryptedValue will have the (encrypted
        sensitiveData object) with the corresponding error details like
        reasonCode and description.
      value:
        panListId: '230417253818957824'
        successfulCount: '1'
        failureCount: '1'
        encryptedValue: eyJraWQiOiI3NjFiMDAzYzFlYWRlM(...).Y+oPYKZEMTKyYcSIVEgtQw
    FullSuccessPanDeregistrationResponse:
      description: >-
        Response body of a full success deregistration. Counts fields showcase
        the number of pans processed successfully and unsuccessfully. In case of
        the full success response successfulCount will have the count of
        successful pans and failureCount will have '0'. Since there are not
        failed pans the encryptedValue will not be present.
      value:
        panListId: '230417253818957824'
        successfulCount: '1'
        failureCount: '0'
    FailurePanDeregistrationResponse:
      description: >-
        Response body of a failure deregistration. Counts fields showcase the
        number of pans processed successfully and unsuccessfully. In case of
        full failure response object, successfulCount will be '0' and
        failureCount will have the count of the failure pans. The encryptedValue
        will have the (encrypted sensitiveData object) with the corresponding
        error details like reasonCode and description.
      value:
        panListId: '230417253818957824'
        successfulCount: '0'
        failureCount: '1'
        encryptedValue: eyJraWQiOiI3NjFiMDAzYzFlYWRlM(...).Y+oPYKZEMTKyYcSIVEgtQw
    UnencryptedPartialSuccessPanDeregistrationResponse:
      description: >-
        Unencrypted deregistration response with pans object containing list of
        pan and error descriptions. Counts fields showcase the number of pans
        processed successfully and unsuccessfully.
      value:
        panListId: '230417253818957824'
        successfulCount: '2'
        failureCount: '4'
        sensitiveData:
          pans:
            - pan: '5110922275884793'
              error:
                reasonCode: pan.not.linked
                description: pan not associated with the pan list
            - pan: '5110922275884792'
              error:
                reasonCode: Invalid.pan
                description: pan failed for Luhn check
            - pan: '23037'
              error:
                reasonCode: Invalid.pan
                description: pan doesn't have required 11-19 digits
            - pan: '5555552292032404'
              error:
                reasonCode: pan.not.registered
                description: pan not present
    UnauthorizedError:
      description: Unauthorized to access the resource.
      value:
        Errors:
          Error:
            - Source: Gateway
              ReasonCode: DECLINED
              Description: Unauthorized - Access Not Granted
              Recoverable: false
              Details: null
    ConsumerForbiddenError:
      description: Account not approved to access Mastercard Installments APIs
      value:
        Errors:
          Error:
            - Source: mci-installments-consumer-api
              ReasonCode: forbidden
              Description: >-
                Your account is not approved to access the API or resource,
                kindly contact your Mastercard associate to get approval.
              Recoverable: false
              Details: ''
    CardedInstallmentsOffersRequestPlain:
      description: >-
        Typical Offer request for 'Mastercard Installments Payment Services
        with plain payload. Please note that the client needs to encrypt
        sensitiveData field using Mastercard provided JWE encryption libraries
        before calling the API. Refer to the example, Carded Installments Offers
        Request Encrypted (only for Reference), to understand how the resulting
        payload should look like after performing encryption.
      value:
        transaction:
          amount: 400
          currency: USD
          localDateTime: '2023-10-26T00:00:00Z'
        merchant:
          name: Globex Decor
          country: USA
          mcc: '1711'
          url: www.globexdecor.com
          acquirerId: '234353'
          merchantId: '121234'
        sensitiveData:
          consumer:
            primaryAccountNumber: '5110921032063789'
    CardedInstallmentsOffersRequestEncrypted:
      description: >-
        Typical Offer request for 'Mastercard Installments Payment Services
        showing indicative payload after performing JWE encryption on
        sensitiveData field.
      value:
        transaction:
          amount: 400
          currency: USD
          localDateTime: '2023-10-26T00:00:00Z'
        merchant:
          name: Globex Decor
          country: USA
          mcc: '1711'
          url: www.globexdecor.com
          acquirerId: '234353'
          merchantId: '121234'
        encryptedValue: eyJraWQiOiI3NjFiMDAzYzFlYWRlM(...)==.Y+oPYKZEMTKyYcSIVEgtQw==
    CardedInstallmentsOffers:
      description: >-
        API response for 'Mastercard Installments Payment Services' showing
        details of two eligible standard offers found.
      value:
        total: 2
        offerTransactionId: '1763137029152964608'
        offers:
          - priority: 1
            offerId: '21345693'
            offerType: CARDED_OFFER
            offerDisplayText: 6 biweekly payments of $66.67
            currencySymbol: $
            apr: 0
            tenure: 6
            frequency: BIWEEKLY
            interestRate: 0
            firstInstallmentSchedule: TRANSACTION_DATE
            totalAmount: 400
            firstInstallmentAmount: 66.67
            otherInstallmentAmount: 66.67
            feeType: NO_FEES
            feeValue: 0
            feeDistribution: FRST_INSTL
            offerBeginDatetime: '2021-12-31T19:00:00-05:00'
            offerEndDatetime: '2024-08-30T19:59:59-04:00'
            provider:
              providerId: 29694e7a-b4a8-11ec-b909-0242ac120002
              cid: 244426
              providerName: Mastercard - Operations & Technology - BizOps
              providerLogoUrl: >-
                https://mtf.installments.mastercard.com/mtf/Mast_2d5f306e-78d3-483a-a5c9-8343171e75de.png
              disclosure: Offer only qualify for a payment as low as $50.00 up to $600.00.
            schedulePayments:
              - installmentNumber: 1
                installmentAmount: 66.67
                dueDate: '2023-10-26'
              - installmentNumber: 2
                installmentAmount: 66.67
                dueDate: '2023-11-09'
              - installmentNumber: 3
                installmentAmount: 66.67
                dueDate: '2023-11-23'
              - installmentNumber: 4
                installmentAmount: 66.67
                dueDate: '2023-12-07'
              - installmentNumber: 5
                installmentAmount: 66.67
                dueDate: '2023-12-21'
              - installmentNumber: 6
                installmentAmount: 66.67
                dueDate: '2024-01-04'
          - priority: 2
            offerId: '21351677'
            offerType: CARDED_OFFER
            offerDisplayText: 4 weekly payments of $100.32
            currencySymbol: $
            apr: 101.52
            tenure: 4
            frequency: WEEKLY
            interestRate: 11.2
            firstInstallmentSchedule: TRANSACTION_DATE
            totalAmount: 411.38
            firstInstallmentAmount: 110.42
            otherInstallmentAmount: 100.32
            feeType: FIXED_AMT
            feeValue: 10.1
            feeDistribution: FRST_INSTL
            offerBeginDatetime: '2023-01-01T00:00:00-05:00'
            offerEndDatetime: '2025-12-31T23:59:59-05:00'
            provider:
              providerId: 29694e7a-b4a8-11ec-b909-0242ac120002
              cid: 244425
              providerName: Mastercard - Operations & Technology - BizOps
              providerLogoUrl: >-
                https://mtf.installments.mastercard.com/mtf/Mast_2d5f306e-78d3-483a-a5c9-8343171e75de.png
              disclosure: Offer only qualify for a payment as low as $50.00 up to $600.00.
            schedulePayments:
              - installmentNumber: 1
                installmentAmount: 110.42
                dueDate: '2023-10-26'
              - installmentNumber: 2
                installmentAmount: 100.32
                dueDate: '2023-11-02'
              - installmentNumber: 3
                installmentAmount: 100.32
                dueDate: '2023-11-09'
              - installmentNumber: 4
                installmentAmount: 100.32
                dueDate: '2023-11-16'
    CardedInstallmentsOffersNotFound:
      description: >-
        API response for 'Mastercard Installments Payment Services' when no
        eligible offers are found.
      value:
        total: 0
        offerTransactionId: '1763137029152964608'
        offers: []
        eligibilityMessages:
          - reasonCode: consumer.not.eligible
            message: Consumer is not eligible for Installments
          - reasonCode: amount.not.qualify
            message: Purchase Amount does not qualify for Installments
          - reasonCode: mcc.not.eligible
            message: Merchant Category Code is not eligible for Installments
    NotFound:
      description: URI/Resource not found.
      value:
        Errors:
          Error:
            - Source: mci-installments-offers-eligibilities-api
              ReasonCode: not.found
              Description: URI/Resource not found.
              Recoverable: false
              Details: ''
    Unauthorized:
      description: Unauthorized to access the resource.
      value:
        Errors:
          Error:
            - Source: mci-installments-offers-eligibilities-api
              ReasonCode: unauthorized
              Description: Unauthorized to access the resource.
              Recoverable: false
              Details: ''
    Forbidden:
      description: Forbidden to access the resource.
      value:
        Errors:
          Error:
            - Source: mci-installments-offers-eligibilities-api
              ReasonCode: forbidden
              Description: Forbidden to access the resource.
              Recoverable: false
              Details: ''
    InvalidContentType:
      description: Content-Type header is null or invalid.
      value:
        Errors:
          Error:
            - Source: mci-installments-offers-eligibilities-api
              ReasonCode: invalid.content.type
              Description: Content-Type header should be application/json.
              Recoverable: false
              Details: ''
    NotAcceptable:
      description: Accept header is null or invalid.
      value:
        Errors:
          Error:
            - Source: mci-installments-offers-eligibilities-api
              ReasonCode: invalid.accept.header
              Description: Accept header should be application/json.
              Recoverable: false
              Details: ''
    InvalidAcceptLanguage:
      description: >-
        Accept-Language header is not matching format [LANGUAGE]-[COUNTRY].
        Language is not as per ISO 639 and country is not as per ISO 31661.
      value:
        Errors:
          Error:
            - Source: mci-installments-offers-eligibilities-api
              ReasonCode: invalid.accept.language
              Description: Accept Language header is invalid.
              Recoverable: false
              Details: ''
    InvalidCurrencyCode:
      description: Provided Currency Code in request is invalid
      value:
        Errors:
          Error:
            - Source: mci-installments-offers-eligibilities-api
              ReasonCode: invalid.request.parameter
              Description: Currency Code Not Supported
              Recoverable: false
              Details: ''
    InvalidIsdCode:
      description: Provided ISD code in request is invalid.
      value:
        Errors:
          Error:
            - Source: mci-installments-offers-eligibilities-api
              ReasonCode: invalid.request.parameter
              Description: ISD code is invalid. It must be according to ISD code standard.
              Recoverable: false
              Details: ''
    InvalidCountryCode:
      description: Provided Country Code in request is invalid
      value:
        Errors:
          Error:
            - Source: mci-installments-offers-eligibilities-api
              ReasonCode: invalid.request.parameter
              Description: Country Code Not Supported
              Recoverable: false
              Details: ''
    InvalidPrimaryAccountNumber:
      description: Provided PAN in request failed to pass Luhn algorithm check.
      value:
        Errors:
          Error:
            - Source: mci-installments-offers-eligibilities-api
              ReasonCode: invalid.request.parameter
              Description: PAN provided is invalid
              Recoverable: false
              Details: ''
    InvalidCountryCurrencyCodePair:
      description: Provided Country and Currency Code pair in request is invalid
      value:
        Errors:
          Error:
            - Source: mci-installments-offers-eligibilities-api
              ReasonCode: invalid.request.parameter
              Description: Invalid Country and Currency Pair
              Recoverable: false
              Details: ''
    InvalidPrimaryAccountNumberSize:
      description: Provided PrimaryAccountNumber digit size in requests not matching.
      value:
        Errors:
          Error:
            - Source: mci-installments-offers-eligibilities-api
              ReasonCode: consumer.primaryAccountNumber
              Description: size must be between 13 and 24
              Recoverable: false
              Details: ''
            - Source: mci-installments-offers-eligibilities-api
              ReasonCode: consumer.primaryAccountNumber
              Description: must match \"^\\d{13,24}$\"
              Recoverable: false
              Details: ''
    TransactionAmountInvalid:
      description: Transaction amount in request is not a valid value.
      value:
        Errors:
          Error:
            - Source: mci-installments-offers-eligibilities-api
              ReasonCode: transaction.amount
              Description: must not be null
              Recoverable: false
              Details: ''
    TransactionCurrencyInvalid:
      description: Transaction currency in request is not a valid value.
      value:
        Errors:
          Error:
            - Source: mci-installments-offers-eligibilities-api
              ReasonCode: transaction.currency
              Description: must not be null
              Recoverable: false
              Details: ''
    TransactionLocalDateTimeInvalid:
      description: Transaction localDateTime in request is not a valid value.
      value:
        Errors:
          Error:
            - Source: mci-installments-offers-eligibilities-api
              ReasonCode: invalid.request.parameter
              Description: Local Transaction date and time must be present
              Recoverable: false
              Details: ''
    MissingCountryCode:
      description: Country Code merchant parameter is not provided in request.
      value:
        Errors:
          Error:
            - Source: mci-installments-offers-eligibilities-api
              ReasonCode: invalid.request.parameter
              Description: Country code must be present
              Recoverable: false
              Details: ''
    InvalidMerchantId:
      description: Merchant Id in request is invalid.
      value:
        Errors:
          Error:
            - Source: mci-installments-offers-eligibilities-api
              ReasonCode: merchant.merchantId
              Description: size must be between 1 and 15
              Recoverable: false
              Details: ''
    InvalidMerchantName:
      description: Merchant Name in request is invalid.
      value:
        Errors:
          Error:
            - Source: mci-installments-offers-eligibilities-api
              ReasonCode: merchant.name
              Description: size must be between 1 and 100
              Recoverable: false
              Details: ''
    InvalidAcquirerId:
      description: Acquirer Id in request is invalid.
      value:
        Errors:
          Error:
            - Source: mci-installments-offers-eligibilities-api
              ReasonCode: merchant.acquirerId
              Description: size must be between 1 and 6
              Recoverable: false
              Details: ''
    InvalidMerchantURL:
      description: Merchant URL in request is invalid.
      value:
        Errors:
          Error:
            - Source: mci-installments-offers-eligibilities-api
              ReasonCode: merchant.url
              Description: size must be between 1 and 50
              Recoverable: false
              Details: ''
    InvalidMcc:
      description: Merchant Category Code in request is invalid.
      value:
        Errors:
          Error:
            - Source: mci-installments-offers-eligibilities-api
              ReasonCode: merchant.mcc
              Description: size must be between 4 and 4
              Recoverable: false
              Details: ''
    MissingMerchantParameters:
      description: >-
        Merchant Parameters with combination of AcquirerId, MerchantId and
        Country code in request is invalid.
      value:
        Errors:
          Error:
            - Source: mci-installments-offers-eligibilities-api
              ReasonCode: invalid.request.parameter
              Description: Merchant object is empty. Country code and MCC must exist
              Recoverable: false
              Details: ''
    InvalidMerchantParameters:
      description: >-
        Merchant Parameters with combination of AcquirerId, MerchantId and
        Country code in request is invalid.
      value:
        Errors:
          Error:
            - Source: mci-installments-offers-eligibilities-api
              ReasonCode: invalid.request.parameter
              Description: AcquirerId, MerchantId and CountryCode must be present
              Recoverable: false
              Details: ''
    MissingCountyCodeInMerchantParameters:
      description: >-
        For Merchant parameters any combinations of (AcquirerId and MerchantId)
        Or (Merchant URL) Or (Merchant Name) Country code must be present in the
        request.
      value:
        Errors:
          Error:
            - Source: mci-installments-offers-eligibilities-api
              ReasonCode: invalid.request.parameter
              Description: Country code must be present
              Recoverable: false
              Details: ''
    InvalidMerchantParameterCombinations:
      description: >-
        Merchant Parameters with combination of AcquirerId and MerchantId and
        Country code Or Merchant URL and Country code Or Merchant Name and
        Country code must be present in the request.
      value:
        Errors:
          Error:
            - Source: mci-installments-offers-eligibilities-api
              ReasonCode: invalid.request.parameter
              Description: >-
                One of the below combination of data must be present 1. If
                requester pass either of acquirer Id or merchant Id than
                country, acquirer Id and merchant Id is mandatory 2. In case of
                merchant name - country code is mandatory 3. In case of URL -
                country code is mandatory
              Recoverable: false
              Details: ''
    InvalidPublicKeyFingerprint:
      description: Provided public key fingerprint in request is invalid.
      value:
        Errors:
          Error:
            - Source: mci-installments-offers-eligibilities-api
              ReasonCode: invalid.request.parameter
              Description: Provided public key fingerprint in request is invalid.
              Recoverable: false
              Details: ''
    TransactionAmountMisMatch:
      description: Provided transaction amount does not match with Offer.
      value:
        Errors:
          Error:
            - Source: mci-installment-bnpl-plans-api
              ReasonCode: invalid.request.parameter
              Description: Provided transaction amount does not match with offer.
              Recoverable: false
              Details: Mismatch in Transaction Amount.
    TransactionDateMisMatch:
      description: Provided transaction date does not match with Offer.
      value:
        Errors:
          Error:
            - Source: mci-installment-bnpl-plans-api
              ReasonCode: invalid.request.parameter
              Description: Provided transaction date does not match with offer.
              Recoverable: false
              Details: Mismatch in Transaction Date.
    InvalidTransactionCurrency:
      description: Provided transaction currency is not valid.
      value:
        Errors:
          Error:
            - Source: mci-installment-bnpl-plans-api
              ReasonCode: invalid.request.parameter
              Description: Currency Not Supported.
              Recoverable: false
              Details: Invalid transaction currency.
    BlankPAN:
      description: Blank PAN sent in the Plan API request for **Installments on Cards**.
      value:
        Errors:
          Error:
            - Source: mci-installment-bnpl-plans-api
              ReasonCode: invalid.request.parameter
              Description: PAN is present and is blank or null.
              Recoverable: false
              Details: PAN cannot blank or empty.
    NonNumericPAN:
      description: >-
        Non Numeric PAN sent in the Plan API request for **Installments on
        Cards**.
      value:
        Errors:
          Error:
            - Source: mci-installment-bnpl-plans-api
              ReasonCode: invalid.request.parameter
              Description: PAN is present and is non numeric.
              Recoverable: false
              Details: PAN should be numeric only.
    InvalidPANLength:
      description: >-
        Incorrect length of PAN sent in the Plan API request for **Installments
        on Cards**.
      value:
        Errors:
          Error:
            - Source: mci-installment-bnpl-plans-api
              ReasonCode: invalid.request.parameter
              Description: Incorrect PAN length.
              Recoverable: false
              Details: >-
                PAN should not be less than 11 and greater than 19 in length.
                Please provide a valid PAN.
    InvalidTokenPAN:
      description: >-
        Invalid Token PAN sent in the Plan API request for **Installments on
        Cards**.
      value:
        Errors:
          Error:
            - Source: mci-installment-bnpl-plans-api
              ReasonCode: invalid.request.parameter
              Description: Detokenization failed due to incorrect DPAN.
              Recoverable: false
              Details: PAN provided is invalid.
    PANMisMatch:
      description: PAN does not match with Offer.
      value:
        Errors:
          Error:
            - Source: mci-installment-bnpl-plans-api
              ReasonCode: pan.match
              Description: Provided PAN does not match with offer.
              Recoverable: false
              Details: PAN does not match with Offer.
    InvalidLengthMerchantURL:
      description: >-
        Incorrect Merchant URL Length sent in the Plan API request for
        **Installments on Cards**.
      value:
        Errors:
          Error:
            - Source: mci-installment-bnpl-plans-api
              ReasonCode: invalid.request.parameter
              Description: Incorrect Merchant URL length.
              Recoverable: false
              Details: >-
                Merchant URL should not be lesser that 1 and greater than 50 in
                length.
    InvalidLengthMerchantName:
      description: >-
        Incorrect Merchant Name Length sent in the Plan API request for
        **Installments on Cards**.
      value:
        Errors:
          Error:
            - Source: mci-installment-bnpl-plans-api
              ReasonCode: invalid.request.parameter
              Description: Merchant Name validation failed-Value has incorrect length.
              Recoverable: false
              Details: Merchant name should not be greater than 100 in length.
    InvalidLengthAcquirerId:
      description: >-
        Incorrect Length for Acquirer Id provided in the Plan API request for
        **Installments on Cards**.
      value:
        Errors:
          Error:
            - Source: mci-installment-bnpl-plans-api
              ReasonCode: invalid.request.parameter
              Description: Incorrect Acquirer Id length.
              Recoverable: false
              Details: >-
                Acquirer Id should not be less than 1 and greater than 6 in
                length. Please provide a valid Acquirer Id.
    InvalidLengthMcc:
      description: >-
        Incorrect Length for Mcc provided in the Plan API request for
        **Installments on Cards**.
      value:
        Errors:
          Error:
            - Source: mci-installment-bnpl-plans-api
              ReasonCode: invalid.request.parameter
              Description: Merchant Category Code is invalid. Length must match 4.
              Recoverable: false
              Details: Merchant Category Code length must be 4.
    InvalidLengthMerchantId:
      description: >-
        Incorrect Length for Merchant Id provided in the Plan API request for
        **Installments on Cards**.
      value:
        Errors:
          Error:
            - Source: mci-installment-bnpl-plans-api
              ReasonCode: invalid.request.parameter
              Description: Incorrect Merchant Id length.
              Recoverable: false
              Details: >-
                Merchant id should not be lesser than 1 and greater than 15 in
                length.
    InvalidAmountType:
      description: >-
        Incorrect value for Amount Type field sent in the Plan API request for
        **Installments on Cards**.
      value:
        Errors:
          Error:
            - Source: mci-installment-bnpl-plans-api
              ReasonCode: invalid.request.parameter
              Description: Incorrect value for Amount Type.
              Recoverable: false
              Details: Amount type must be 'PURCHASE' OR 'FINAL'.
    InvalidLengthSTAN:
      description: >-
        Incorrect length for STAN sent in the Plan API request for
        **Installments on Cards**.
      value:
        Errors:
          Error:
            - Source: mci-installment-bnpl-plans-api
              ReasonCode: invalid.request.parameter
              Description: Incorrect STAN length.
              Recoverable: false
              Details: >-
                STAN should not be less than 1 or greater than 6. Please provide
                a valid STAN.
    NonNumericSTAN:
      description: >-
        Non-Numeric STAN sent in the Plan API request for **Installments on
        Cards**.
      value:
        Errors:
          Error:
            - Source: mci-installment-bnpl-plans-api
              ReasonCode: invalid.request.parameter
              Description: Non-Numeric STAN.
              Recoverable: false
              Details: STAN should be numeric only.
    InvalidLengthRRN:
      description: >-
        Incorrect Length for RRN sent in the Plan API request for **Installments
        on Cards**.
      value:
        Errors:
          Error:
            - Source: mci-installment-bnpl-plans-api
              ReasonCode: invalid.request.parameter
              Description: Incorrect RRN length.
              Recoverable: false
              Details: RRN should be 12 digits in length. Please provide a valid RRN.
    NonNumericRRN:
      description: >-
        Non-Numeric RRN sent in the Plan API request for **Installments on
        Cards**.
      value:
        Errors:
          Error:
            - Source: mci-installment-bnpl-plans-api
              ReasonCode: invalid.request.parameter
              Description: Non-Numeric RRN.
              Recoverable: false
              Details: RRN should be numeric only.
    InvalidLengthAuthCode:
      description: >-
        Incorrect length for Auth Code sent in the Plan API request for
        **Installments on Cards**.
      value:
        Errors:
          Error:
            - Source: mci-installment-bnpl-plans-api
              ReasonCode: invalid.request.parameter
              Description: Incorrect Auth Code length.
              Recoverable: false
              Details: >-
                Authorization code should be 6 digits in length. Please provide
                a valid Authorization code.
    NonNumericAuthCode:
      description: >-
        Non-Numeric Auth Code value sent in the Plan API request for
        **Installments on Cards**.
      value:
        Errors:
          Error:
            - Source: mci-installment-bnpl-plans-api
              ReasonCode: invalid.request.parameter
              Description: Invalid Auth Code.
              Recoverable: false
              Details: .
    InvalidTransactionLinkId:
      description: >-
        Transaction link id is present and is more than 22 in the Plan API
        request for **Installments on Cards**.
      value:
        Errors:
          Error:
            - Source: mci-installment-bnpl-plans-api
              ReasonCode: invalid.request.parameter
              Description: Invalid Transaction Link Id.
              Recoverable: false
              Details: >-
                Transaction link id should not be greater than 22. Please
                provide a valid transaction link id.
    InvalidTransmissionDateTime:
      description: >-
        Incorrect datetime format for TransmissionDateTime field sent in the
        Plan API request for **Installments on Cards**.
      value:
        Errors:
          Error:
            - Source: mci-installment-bnpl-plans-api
              ReasonCode: invalid.request.parameter
              Description: Invalid datetime format.
              Recoverable: false
              Details: >-
                Transmission date and time should be in 'YYYY-MM-DD hh:mm:ss'
                format only.
    InvalidLocalTransactionDateTime:
      description: >-
        Incorrect datetime format for LocalTransactionDateTime field sent in the
        Plan API request for **Installments on Cards**.
      value:
        Errors:
          Error:
            - Source: mci-installment-bnpl-plans-api
              ReasonCode: invalid.request.parameter
              Description: Invalid datetime format.
              Recoverable: false
              Details: >-
                Local Transaction date and time should be in 'YYYY-MM-DD
                hh:mm:ss' format only.
    InvalidFrequency:
      description: >-
        Invalid frequency sent in the Plan API request for Installments on
        Cards.
      value:
        Errors:
          Error:
            - Source: mci-installment-bnpl-plans-api
              ReasonCode: invalid.request.parameter
              Description: Invalid frequency - 15DAYS.
              Recoverable: false
              Details: Frequency not valid for Installments on Card.
    InvalidPresentedOffersDSP:
      description: >-
        Presented offers is required, along with the offer ID, if the client is
        classified as a distribution partner.
      value:
        Errors:
          Error:
            - Source: mci-installment-bnpl-plans-api
              ReasonCode: invalid.request.parameter
              Description: >-
                Both OfferId and TransactionOffers must be present for this
                client - Value must not be null
              Recoverable: false
              Details: Invalid input request for cardedInstallments.
    InvalidPresentedOffersDRNG:
      description: >-
        Presented offers is required, along with the offer ID, if the Provider
        Carded Product Use Case includes 'during purchase'.
      value:
        Errors:
          Error:
            - Source: mci-installment-bnpl-plans-api
              ReasonCode: invalid.request.parameter
              Description: >-
                Both OfferId and TransactionOffers must be present for this
                provider - Value must not be null
              Recoverable: false
              Details: Invalid input request for cardedInstallments.
    MerchantParticipations:
      value:
        - merchantLegalName: Example Mart
          countryCode: USA
          acquirerICA: '00689425761'
          dbaNames:
            - ACME
          mids:
            - '987123456789124'
            - '123123456789124'
            - '567123456789124'
          optIn: 'Y'
          duns: '879847426'
          websiteUrl: https://www.example.com
          wallets:
            - walletId: 1
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
            - walletId: 2
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
            - walletId: 3
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
          address:
            addressLine1: 600 WEST
            addressLine2: SECTOR 5
            addressLine3: SUITE 775
            city: St Peters
            state: QLD
            postalCode: '85001'
        - merchantLegalName: Example Mart 1
          countryCode: USA
          acquirerICA: '00689425762'
          dbaNames:
            - ACME
          mids:
            - '387123456789124'
            - '223123456789124'
            - '167123456789124'
          optIn: 'Y'
          duns: '879847421'
          websiteUrl: https://www.example2.com
          wallets:
            - walletId: 1
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
            - walletId: 2
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
            - walletId: 3
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
          address:
            addressLine1: 600 WEST
            addressLine2: SECTOR 5
            addressLine3: SUITE 775
            city: St Peters
            state: QLD
            postalCode: '85001'
    MerchantParticipationsMAID:
      value:
        - merchantLegalName: Example Mart
          countryCode: USA
          acquirerICA: '00689425761'
          dbaNames:
            - ACME
          maid: '321765'
          maidType: EXT
          optIn: 'Y'
          duns: '879847426'
          websiteUrl: https://www.example.com
          wallets:
            - walletId: 1
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
            - walletId: 2
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
            - walletId: 3
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
          address:
            addressLine1: 600 WEST
            addressLine2: SECTOR 5
            addressLine3: SUITE 775
            city: St Peters
            state: QLD
            postalCode: '85001'
        - merchantLegalName: Example Store
          countryCode: USA
          acquirerICA: '00689425762'
          dbaNames:
            - ES
          maid: '321755'
          maidType: GRP
          optIn: 'N'
          duns: '879847427'
          websiteUrl: https://www.examplestore.com
          wallets:
            - walletId: 1
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
            - walletId: 2
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
            - walletId: 3
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
          address:
            addressLine1: 605 WEST
            addressLine2: SECTOR 15
            addressLine3: SUITE 779
            city: St Peters
            state: QLD
            postalCode: '85001'
    MerchantParticipationsForAustralia:
      value:
        - merchantLegalName: Example Mart2
          merchantGroup: 1A
          countryCode: AUS
          acquirerICA: '00689425761'
          dbaNames:
            - ACME2
          mids:
            - '987123456789124'
            - '123123456789124'
            - '567123456789124'
          optIn: 'Y'
          duns: '879847426'
          websiteUrl: https://www.example.com
          address:
            addressLine1: 601 WEST
            addressLine2: SECTOR 6
            addressLine3: SUITE 776
            city: St Peters 1
            state: QLD
            postalCode: '85002'
          wallets:
            - walletId: 1
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
            - walletId: 2
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
            - walletId: 3
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
        - merchantLegalName: Example Mart2
          merchantGroup: 2A
          countryCode: AUS
          acquirerICA: '00689425762'
          dbaNames:
            - ACME2
          mids:
            - '987123456789125'
            - '123123456789126'
            - '567123456789127'
          optIn: 'N'
          duns: '879847427'
          websiteUrl: https://www.examplestore.com
          address:
            addressLine1: 601 WEST
            addressLine2: SECTOR 6
            addressLine3: SUITE 776
            city: St Peters 1
            state: QLD
            postalCode: '85002'
          wallets:
            - walletId: 1
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
            - walletId: 2
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
            - walletId: 3
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
    Merchants:
      value:
        - merchantLegalName: Example Mart
          countryCode: USA
          acquirerICA: '00689425761'
          submitterICA: '12689425746'
          dbaNames:
            - ACME
          optIn: 'Y'
          status: COMPLETED
          duns: '879847426'
          websiteUrl: https://www.example.com
          wallets:
            - walletId: 1
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
            - walletId: 2
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
            - walletId: 3
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
          address:
            addressLine1: 600 WEST
            addressLine2: SECTOR 5
            addressLine3: SUITE 775
            city: St Peters
            state: QLD
            postalCode: '85001'
        - merchantLegalName: Example Mart2
          countryCode: USA
          acquirerICA: '00689425761'
          submitterICA: '12689425746'
          dbaNames:
            - ACME2
          optIn: 'Y'
          status: COMPLETED
          duns: '879847436'
          websiteUrl: https://www.example.com
          wallets:
            - walletId: 1
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
            - walletId: 2
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
            - walletId: 3
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
          address:
            addressLine1: 600 WEST
            addressLine2: SECTOR 5
            addressLine3: SUITE 775
            city: St Peters
            state: QLD
            postalCode: '85001'
    MaidMerchants:
      value:
        - merchantLegalName: Example Mart
          countryCode: USA
          acquirerICA: '00689425761'
          submitterICA: '12689425746'
          dbaNames:
            - ACME
          maids:
            - '123456'
          maidType: EXT
          optIn: 'Y'
          status: COMPLETED
          duns: '879847426'
          websiteUrl: https://www.example.com
          wallets:
            - walletId: 1
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
            - walletId: 2
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
            - walletId: 3
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
          address:
            addressLine1: 600 WEST
            addressLine2: SECTOR 5
            addressLine3: SUITE 775
            city: St Peters
            state: QLD
            postalCode: '85001'
        - merchantLegalName: Example Mart2
          countryCode: USA
          acquirerICA: '00689425761'
          submitterICA: '12689425746'
          dbaNames:
            - ACME2
          maids:
            - '234567'
          maidType: GRP
          optIn: 'Y'
          status: COMPLETED
          duns: '879847436'
          websiteUrl: https://www.example.com
          wallets:
            - walletId: 1
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
            - walletId: 2
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
            - walletId: 3
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
          address:
            addressLine1: 600 WEST
            addressLine2: SECTOR 5
            addressLine3: SUITE 775
            city: St Peters
            state: QLD
            postalCode: '85001'
    Merchants-Search:
      value:
        - merchantLegalName: Example Mart
          countryCode: USA
          acquirerICA: '00689425761'
          submitterICA: '12689425746'
          dbaNames:
            - ACME
          optIn: 'Y'
          status: COMPLETED
          duns: '879847426'
          websiteUrl: https://www.example.com
          address:
            addressLine1: 600 WEST
            addressLine2: SECTOR 5
            addressLine3: SUITE 775
            city: St Peters
            state: QLD
            postalCode: '85001'
          wallets:
            - walletId: 1
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
            - walletId: 2
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
            - walletId: 3
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
        - merchantLegalName: Example Mart 2
          countryCode: USA
          acquirerICA: '00689425761'
          submitterICA: '12689425746'
          dbaNames:
            - ACME
          optIn: 'Y'
          status: PENDING
          duns: '879847426'
          websiteUrl: https://www.example.com
          address:
            addressLine1: 600 WEST
            addressLine2: SECTOR 5
            addressLine3: SUITE 775
            city: St Peters
            state: QLD
            postalCode: '85001'
    MaidMerchants-Searches:
      value:
        - merchantLegalName: Example Mart
          countryCode: USA
          acquirerICA: '00689425761'
          submitterICA: '12689425746'
          dbaNames:
            - ACME
          maids:
            - '123456'
          maidType: EXT
          optIn: 'Y'
          status: COMPLETED
          duns: '879847426'
          websiteUrl: https://www.example.com
          wallets:
            - walletId: 1
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
            - walletId: 2
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
            - walletId: 3
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
          address:
            addressLine1: 600 WEST
            addressLine2: SECTOR 5
            addressLine3: SUITE 775
            city: St Peters
            state: QLD
            postalCode: '85001'
    Merchants-Searches-Australia:
      value:
        - merchantLegalName: Example Mart
          merchantGroup: 1A
          countryCode: AUS
          acquirerICA: '00689425761'
          submitterICA: '12689425746'
          dbaNames:
            - ACME
          optIn: 'Y'
          status: COMPLETED
          duns: '239847426'
          websiteUrl: https://www.acmeexample.com
          address:
            addressLine1: 600 WEST
            addressLine2: SECTOR 5
            addressLine3: SUITE 775
            city: St Peters
            state: QLD
            postalCode: '85001'
          wallets:
            - walletId: 1
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
            - walletId: 2
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
            - walletId: 3
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
        - merchantLegalName: Example Mart 2
          countryCode: AUS
          acquirerICA: '00689425761'
          submitterICA: '12689425746'
          dbaNames:
            - ACME
          optIn: 'Y'
          status: COMPLETED
          duns: '239847426'
          websiteUrl: https://www.acmeexample.com
          address:
            addressLine1: 600 WEST
            addressLine2: SECTOR 5
            addressLine3: SUITE 775
            city: St Peters
            state: QLD
            postalCode: '85001'
    Merchants-Australia:
      value:
        - merchantLegalName: Example Mart2
          merchantGroup: 1A
          countryCode: AUS
          acquirerICA: '00689425761'
          submitterICA: '12689425746'
          dbaNames:
            - ACME2
          optIn: 'Y'
          status: COMPLETED
          duns: '239847426'
          websiteUrl: https://www.acmeexample.com
          address:
            addressLine1: 601 WEST
            addressLine2: SECTOR 6
            addressLine3: SUITE 776
            city: St Peters 1
            state: QLD
            postalCode: '85001'
          wallets:
            - walletId: 1
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
            - walletId: 2
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
            - walletId: 3
              walletAcceptance: 'Y'
              walletMerchantId: 235346356234 | 125346356236 | 125446356237
        - merchantLegalName: Example Mart
          merchantGroup: 2A
          countryCode: AUS
          acquirerICA: '00689425761'
          submitterICA: '12689425746'
          dbaNames:
            - ACME
          optIn: 'Y'
          status: COMPLETED
          duns: '239847426'
          websiteUrl: https://www.acmeexample.com
          address:
            addressLine1: 600 WEST
            addressLine2: SECTOR 5
            addressLine3: SUITE 775
            city: St Peters
            state: QLD
            postalCode: '85001'
    RequestError:
      value:
        - requestEndpoint: /merchants/participations
          requestId: 9223372036854776000
          httpErrorStatusCode: 400
          errors:
            - source: merchant-participation-api
              reasonCode: invalid.request.parameter
              description: >-
                One of the request parameters is invalid, try again with the
                correct request.
              recoverable: false
              details: Merchant legal name is invalid.
    MerchantSearchParameters:
      value:
        merchantLegalName: Example Mart
        acquirerICA: '00689425761'
        merchantParticipationStatus: COMPLETED
        countryCode: USA
        maid: '123456'
    MerchantMidSearchParameters:
      value:
        merchantLegalName: Example Mart
        countryCode: USA
        acquirerICA: '00689425761'
    MidDetailsPage:
      value:
        merchantLegalName: Example Mart
        acquirerICA: '00689425761'
        countryCode: USA
        optIn: 'Y'
        mids:
          - mid: '987123456789124'
            status: COMPLETED
          - mid: '123123456789124'
            status: COMPLETED
          - mid: '567123456789124'
            status: COMPLETED
    EncryptedMidDetailsPageForAus:
      value:
        merchantLegalName: Example Mart
        acquirerICA: '00689425761'
        merchantGroup: 1A
        countryCode: AUS
        optIn: 'Y'
        mids:
          - mid: '987123456789124'
            status: COMPLETED
          - mid: '123123456789124'
            status: COMPLETED
          - mid: '567123456789124'
            status: COMPLETED
    InvalidRequestIdError:
      value:
        Errors:
          Error:
            - Source: merchant-participation-api
              ReasonCode: invalid.request.parameter
              Description: >-
                One of the request parameters is invalid, try again with the
                correct request.
              Recoverable: false
              Details: >-
                request_id query param must be a positive integer less than
                9223372036854775807.
    ResourceNotFoundError:
      value:
        Errors:
          Error:
            - Source: merchant-participation-api
              ReasonCode: notfound
              Description: request id provided in the request does not exist.
              Recoverable: false
              Details: ''
    AccountNotRegisteredError:
      value:
        Errors:
          Error:
            - Source: Mastercard Installments API's
              ReasonCode: account.not.registered
              Description: >-
                We cannot find the account that you are using to access this
                service. Kindly register your account or contact your Mastercard
                associate if you have already registered with us earlier.
              Recoverable: false
              Details: ''
    ForbiddenError:
      value:
        Errors:
          Error:
            - Source: Mastercard Installments API's
              ReasonCode: forbidden
              Description: >-
                Your account is not approved to access the API or resource,
                kindly contact your Mastercard associate to get approval.
              Recoverable: false
              Details: ''
    NotAcceptableHeader:
      value:
        Errors:
          Error:
            - Source: Mastercard Installments API's
              ReasonCode: not.acceptable.header
              Description: Accept header value is not application/json.
              Recoverable: false
              Details: ''
    InvalidCardProductError:
      value:
        Errors:
          Error:
            - Source: Mastercard Installments API's
              ReasonCode: invalid.request.parameter
              Description: Product SPP is not available for the IND country
              Recoverable: false
              Details: ''
    ConsumerSelectedOffer:
      description: >-
        This example shows a consumer-selected offer that is approved by the
        lender.
      value:
        planId: 3d56f5a7-db48-41f0-875e-30920e8465f3
        status: APPROVED
        approvedAmount: 300
        approvedCurrency: USD
        paymentAuthorization:
          primaryAccountNumber: '5110921032063789'
          panExpirationMonth: '08'
          panExpirationYear: '2022'
          cardSecurityCode: '123'
          cardholderFullName: John Doe
          cardholderFirstName: John
          cardholderLastName: Doe
          billingAddress:
            line1: 5 Street Drive
            line2: Apartment 123
            line3: Southampton
            city: O'Fallon
            state: MO
            countryCode: US
            zip: '123456'
    LenderSelectedOffer:
      description: >-
        This example shows an offer approved by the lender. The offer in this
        case is selected by the consumer on the lenders experience.
      value:
        planId: 3d56f5a7-db48-41f0-875e-30920e8465f3
        status: APPROVED
        offerId: '24092019'
        approvedAmount: 300
        approvedCurrency: USD
        paymentAuthorization:
          primaryAccountNumber: '5110921032063789'
          panExpirationMonth: '08'
          panExpirationYear: '2022'
          cardSecurityCode: '123'
          cardholderFullName: John Doe
          cardholderFirstName: John
          cardholderLastName: Doe
          billingAddress:
            line1: 5 Street Drive
            line2: Apartment 123
            line3: Southampton
            city: O'Fallon
            state: MO
            countryCode: US
            zip: '123456'
    Declined:
      description: This example shows an installment loan request being declined.
      value:
        planId: 3d56f5a7-db48-41f0-875e-30920e8465f3
        status: DECLINED
        rejectReasonCode: LENDER_DRIVEN_REJECTION
        rejectReasonDetail: Credit score is too low
    ApprovedCompleted:
      description: Approval processing is completed
      value:
        status: COMPLETED
        callbackUrl: >-
          https://src.mastercard.com?action=COMPLETED&checkoutResponse=EncryptedData
    ApprovedInProgress:
      description: Approval processing is in progress.
      value:
        status: IN_PROGRESS
    MethodNotAllowed:
      value:
        Errors:
          Error:
            - Source: Mastercard Installments API's
              ReasonCode: method.not.allowed
              Description: Method is not allowed
              Recoverable: false
    InvalidFieldFormat:
      value:
        Errors:
          Error:
            - Source: Mastercard Installments API's
              ReasonCode: invalid.request.body.parameter
              Description: Field format or type is invalid
              Recoverable: false
              Details: ''
    InvalidFieldLength:
      value:
        Errors:
          Error:
            - Source: Mastercard Installments API's
              ReasonCode: invalid.request.body.parameter
              Description: Field length is out of bound
              Recoverable: false
              Details: ''
    InvalidFieldValue:
      value:
        Errors:
          Error:
            - Source: Mastercard Installments API's
              ReasonCode: invalid.request.body.parameter
              Description: Value doesn't exist / doesn't meet specified range
              Recoverable: false
              Details: ''
    MissingRequiredField:
      value:
        Errors:
          Error:
            - Source: Mastercard Installments API's
              ReasonCode: invalid.request.body.parameter
              Description: One or more of the required fields are missing
              Recoverable: false
              Details: ''
    ApprovedPlan:
      description: >-
        This example shows a consumer-selected plan that has been approved by a
        lender. The lender can view the status of the plan after the approval.
      value:
        consumer:
          email: doe.jane@example.com
          isdCode: '1'
          mobile: '5551231234'
        merchant:
          acceptor: '100234'
          country: USA
          mcc: '1711'
          name: Decor shop
        offerId: '24092019'
        transactionOffers:
          - offerId: '24092019'
          - offerId: '87654321'
        planId: 3d56f5a7-db48-41f0-875e-30920e8465f3
        planInstallmentInformation:
          apr: 1.92
          currency: USD
          frequency: 15DAYS
          installmentAmount: 166.79
          installmentFee: 0
          tenure: 3
          totalAmount: 500.37
        providerId: 218b9962-1355-44e4-8a16-f911363fd849
        scheduledRepayments:
          - amount: 166.79
            dueDate: '2022-05-30'
            installmentNumber: 1
          - amount: 166.79
            dueDate: '2022-06-13'
            installmentNumber: 2
          - amount: 166.79
            dueDate: '2022-06-27'
            installmentNumber: 3
        status: APPROVED
        transaction:
          amount: 400.11
          currency: USD
    InitiatedPlanProviderSelected:
      description: >-
        This example shows no offer selection by a consumer during checkout.
        Transaction Offers and ProviderId are specified instead. Lenders can
        view the consumer information, merchant information, and transaction
        information to determine installment eligibility.
      value:
        consumer:
          email: doe.jane@example.com
          isdCode: '1'
          mobile: '5551231234'
        merchant:
          acceptor: '100234'
          country: USA
          mcc: '1711'
          name: Decor shop
        planId: 3d56f5a7-db48-41f0-875e-30920e8465f3
        providerId: 218b9962-1355-44e4-8a16-f911363fd849
        status: CREATED
        transaction:
          amount: 400.11
          currency: USD
        transactionOffers:
          - offerId: '12345678'
          - offerId: '87654321'
    InitiatedPlanOfferSelected:
      description: >-
        This example shows a consumer selected plan during checkout when OfferId
        is available. Lenders can view the plan information consumer
        information, merchant information, and transaction information to
        determine installment eligibility.
      value:
        consumer:
          email: doe.jane@example.com
          isdCode: '1'
          mobile: '5551231234'
        merchant:
          acceptor: '100234'
          country: USA
          mcc: '1711'
          name: Decor shop
        offerId: '24092019'
        transactionOffers:
          - offerId: '24092019'
          - offerId: '87654321'
        planId: 3d56f5a7-db48-41f0-875e-30920e8465f3
        planInstallmentInformation:
          apr: 1.92
          currency: USD
          frequency: 15DAYS
          installmentAmount: 166.79
          installmentFee: 0
          tenure: 3
          totalAmount: 500.37
        providerId: 218b9962-1355-44e4-8a16-f911363fd849
        scheduledRepayments:
          - amount: 166.79
            dueDate: '2022-05-30'
            installmentNumber: 1
          - amount: 166.79
            dueDate: '2022-06-13'
            installmentNumber: 2
          - amount: 166.79
            dueDate: '2022-06-27'
            installmentNumber: 3
        status: CREATED
        transaction:
          amount: 400.11
          currency: USD
    RejectedPlan:
      description: >-
        This example shows a consumer-selected plan that has been declined by a
        lender. Lenders can view the status of the plan after the decline.
      value:
        consumer:
          email: doe.jane@example.com
          isdCode: '1'
          mobile: '5551231234'
        merchant:
          acceptor: '100234'
          country: USA
          mcc: '1711'
          name: Decor shop
        offerId: '24092019'
        transactionOffers:
          - offerId: '24092019'
          - offerId: '87654321'
        planId: 3d56f5a7-db48-41f0-875e-30920e8465f3
        planInstallmentInformation:
          apr: 1.92
          currency: USD
          frequency: 15DAYS
          installmentAmount: 166.79
          installmentFee: 0
          tenure: 3
          totalAmount: 500.37
        providerId: 218b9962-1355-44e4-8a16-f911363fd849
        rejectReasonCode: LENDER_DRIVEN_REJECTION
        rejectReasonDetail: Customer's credit score is insufficient.
        scheduledRepayments:
          - amount: 166.79
            dueDate: '2022-05-30'
            installmentNumber: 1
          - amount: 166.79
            dueDate: '2022-06-13'
            installmentNumber: 2
          - amount: 166.79
            dueDate: '2022-06-27'
            installmentNumber: 3
        status: DECLINED
        transaction:
          amount: 400.11
          currency: USD
